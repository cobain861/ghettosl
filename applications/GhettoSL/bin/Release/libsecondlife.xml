<?xml version="1.0"?>
<doc>
    <assembly>
        <name>libsecondlife</name>
    </assembly>
    <members>
        <member name="T:libsecondlife.ChatCallback">
            <summary>
            
            </summary>
            <param name="Message"></param>
            <param name="Audible"></param>
            <param name="Type"></param>
            <param name="Sourcetype"></param>
            <param name="FromName"></param>
            <param name="ID"></param>
        </member>
        <member name="T:libsecondlife.BalanceCallback">
            <summary>
            Triggered when the L$ account balance for this avatar changes
            </summary>
            <param name="balance">The new account balance</param>
        </member>
        <member name="T:libsecondlife.InstantMessageCallback">
            <summary>
            
            </summary>
            <param name="fromAgentID"></param>
            <param name="fromAgentName"></param>
            <param name="toAgentID"></param>
            <param name="parentEstateID"></param>
            <param name="regionID"></param>
            <param name="position"></param>
            <param name="dialog"></param>
            <param name="groupIM"></param>
            <param name="imSessionID"></param>
            <param name="timestamp"></param>
            <param name="message"></param>
            <param name="offline"></param>
            <param name="binaryBucket"></param>
        </member>
        <member name="T:libsecondlife.TeleportCallback">
            <summary>
            Triggered for any status updates of a teleport (progress, failed, succeeded)
            </summary>
            <param name="message">A message about the current teleport status</param>
        </member>
        <member name="T:libsecondlife.TeleportStatus">
            <summary>
            Name Conversion for Teleport Status flag/bit
            </summary>
        </member>
        <member name="T:libsecondlife.Avatar">
            <summary>
            Basic class to hold other Avatar's data.
            </summary>
        </member>
        <member name="F:libsecondlife.Avatar.ID">
            <summary>The Avatar's UUID, asset server</summary>
        </member>
        <member name="F:libsecondlife.Avatar.LocalID">
            <summary>Avatar ID in Region (sim) it is in</summary>
        </member>
        <member name="F:libsecondlife.Avatar.Name">
            <summary>Full Name of Avatar</summary>
        </member>
        <member name="F:libsecondlife.Avatar.GroupName">
            <summary>Active Group of Avatar</summary>
        </member>
        <member name="F:libsecondlife.Avatar.Online">
            <summary>Online Status of Avatar</summary>
        </member>
        <member name="F:libsecondlife.Avatar.Position">
            <summary>Location of Avatar (x,y,z probably)</summary>
        </member>
        <member name="F:libsecondlife.Avatar.Rotation">
            <summary>Rotational Position of Avatar</summary>
        </member>
        <member name="F:libsecondlife.Avatar.CurrentRegion">
            <summary>Region (aka sim) the Avatar is in</summary>
        </member>
        <member name="F:libsecondlife.Avatar.BornOn">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.ProfileImage">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.PartnerID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AboutText">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.WantToMask">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.WantToText">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.SkillsMask">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.SkillsText">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.FirstLifeText">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.FirstLifeImage">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Identified">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Transacted">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AllowPublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.MaturePublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.CharterMember">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Behavior">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Appearance">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Building">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.LanguagesText">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.Textures">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.ProfileURL">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Avatar.AgentUpdateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_AT_POS">
            <summary>Move Forward (SL Keybinding: W/Up Arrow)</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_AT_NEG">
            <summary>Move Backward (SL Keybinding: S/Down Arrow)</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_LEFT_POS">
            <summary>Move Left (SL Keybinding: Shift-(A/Left Arrow))</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_LEFT_NEG">
            <summary>Move Right (SL Keybinding: Shift-(D/Right Arrow))</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_UP_POS">
            <summary>Not Flying: Jump/Flying: Move Up (SL Keybinding: E)</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_UP_NEG">
            <summary>Not Flying: Croutch/Flying: Move Down (SL Keybinding: C)</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_PITCH_POS">
            <summary>Unused</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_PITCH_NEG">
            <summary>Unused</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_YAW_POS">
            <summary>Unused</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_YAW_NEG">
            <summary>Unused</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_FAST_AT">
            <summary>ORed with AGENT_CONTROL_AT_* if the keyboard is being used</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_FAST_LEFT">
            <summary>ORed with AGENT_CONTROL_LEFT_* if the keyboard is being used</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_FAST_UP">
            <summary>ORed with AGENT_CONTROL_UP_* if the keyboard is being used</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_FLY">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_STOP">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_FINISH_ANIM">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_STAND_UP">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_SIT_ON_GROUND">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_MOUSELOOK">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_AT_POS">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_AT_NEG">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_LEFT_POS">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_LEFT_NEG">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_UP_POS">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_NUDGE_UP_NEG">
            <summary>Legacy, used if a key was pressed for less than a certain amount of time</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_TURN_LEFT">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_TURN_RIGHT">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_AWAY">
            <summary>Set when the avatar is idled or set to away. Note that the away animation is 
            activated separately from setting this flag</summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_LBUTTON_DOWN">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_LBUTTON_UP">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_ML_LBUTTON_DOWN">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Avatar.AgentUpdateFlags.AGENT_CONTROL_ML_LBUTTON_UP">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.MainAvatar">
            <summary>
            Class to hold Client Avatar's data
            </summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ID">
            <summary>Your (client) Avatar UUID, asset server</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.LocalID">
            <summary>Your (client) Avatar ID, local to Region/sim</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.FirstName">
            <summary>Avatar First Name (i.e. Philip)</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.LastName">
            <summary>Avatar Last Name (i.e. Linden)</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.TeleportMessage">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.Position">
            <summary>Current position of avatar</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.Rotation">
            <summary>Current rotation of avatar</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.LookAt">
            <summary>The point the avatar is currently looking at
            (may not stay updated)</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.HomePosition">
            <summary>Position avatar client will goto when login to 'home' or during
            teleport request to 'home' region.</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.HomeLookAt">
            <summary>LookAt point saved/restored with HomePosition</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.health">
            <summary>Gets the health of the agent</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.balance">
            <summary>Gets the current balance of the agent</summary>
        </member>
        <member name="M:libsecondlife.MainAvatar.#ctor(libsecondlife.SecondLife)">
            <summary>
            Constructor, aka 'CallBack Central' - Setup callbacks for packets related to our avatar
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.InstantMessage(libsecondlife.LLUUID,System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="message"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.InstantMessage(libsecondlife.LLUUID,System.String,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="message"></param>
            <param name="IMSessionID"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.InstantMessage(System.String,libsecondlife.LLUUID,libsecondlife.LLUUID,System.String,libsecondlife.LLUUID[])">
            <summary>
            
            </summary>
            <param name="fromName"></param>
            <param name="sessionID"></param>
            <param name="target"></param>
            <param name="message"></param>
            <param name="conferenceIDs"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.InstantMessage(System.String,libsecondlife.LLUUID,libsecondlife.LLUUID,System.String,libsecondlife.LLUUID[],libsecondlife.LLUUID)">
            <summary>
            Generate an Instant Message (Full Arguments).
            </summary>
            <param name="fromName">Client's Avatar</param>
            <param name="sessionID">SessionID of current connection to grid</param>
            <param name="target">UUID of target Av.</param>
            <param name="message">Text Message being sent.</param>
            <param name="conferenceIDs"></param>
            <param name="IMSessionID"></param>
            
            TODO: Have fromName grabbed from elsewhere and remove argument, to prevent inadvertant spoofing.
            
        </member>
        <member name="M:libsecondlife.MainAvatar.Chat(System.String,System.Int32,libsecondlife.MainAvatar.ChatType)">
            <summary>
            Send a Chat message.
            </summary>
            <param name="message">The Message you're sending out.</param>
            <param name="channel">Channel number (0 would be default 'Say' message, other numbers 
            denote the equivalent of /# in normal client).</param>
            <param name="type">Chat Type, see above.</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.SetHeightWidth(System.UInt16,System.UInt16)">
            <summary>
            Set the height and the width of your avatar. This is used to scale
            the avatar mesh.
            </summary>
            <param name="height">New height of the avatar</param>
            <param name="width">New width of the avatar</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.GiveMoney(libsecondlife.LLUUID,System.Int32,System.String)">
            <summary>
            Give Money to destination Avatar
            </summary>
            <param name="target">UUID of the Target Avatar</param>
            <param name="amount">Amount in L$</param>
            <param name="description">Reason (optional normally)</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.SetAlwaysRun(System.Boolean)">
            <summary>
            Toggle running on or off
            </summary>
        </member>
        <member name="M:libsecondlife.MainAvatar.GiveMoney(libsecondlife.LLUUID,System.Int32,System.String,System.Int32)">
            <summary>
            Give Money to destionation Object or Avatar
            </summary>
            <param name="target">UUID of the Target Object/Avatar</param>
            <param name="amount">Amount in L$</param>
            <param name="description">Reason (Optional normally)</param>
            <param name="transactiontype">The type of transaction.  Currently only 5001 is
            documented for Av->Av money transfers.</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.Animate(System.Collections.Generic.Dictionary{libsecondlife.LLUUID,System.Boolean})">
            <summary>
            Send an AgentAnimation packet that will toggle animations on or off
            </summary>
            <param name="animations">A list of animation UUIDs, and whether to
            turn that animation on or off</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.AutoPilot(System.UInt64,System.UInt64,System.Single)">
            <summary>
            Use the autopilot sim function to move the avatar to a new position
            </summary>
            <remarks>The z value is currently not handled properly by the simulator</remarks>
            <param name="globalX">Integer value for the global X coordinate to move to</param>
            <param name="globalY">Integer value for the global Y coordinate to move to</param>
            <param name="z">Floating-point value for the Z coordinate to move to</param>
            <example>AutoPilot(252620, 247078, 20.2674);</example>
        </member>
        <member name="M:libsecondlife.MainAvatar.AutoPilotLocal(System.Int32,System.Int32,System.Single)">
            <summary>
            Use the autopilot sim function to move the avatar to a new position
            </summary>
            <remarks>The z value is currently not handled properly by the simulator</remarks>
            <param name="localX">Integer value for the local X coordinate to move to</param>
            <param name="localY">Integer value for the local Y coordinate to move to</param>
            <param name="z">Floating-point value for the Z coordinate to move to</param>
            <example>AutoPilot(252620, 247078, 20.2674);</example>
        </member>
        <member name="M:libsecondlife.MainAvatar.BeginTeleport(System.UInt64,libsecondlife.LLVector3,libsecondlife.TeleportCallback)">
            <summary>
            
            </summary>
            <param name="regionHandle"></param>
            <param name="position"></param>
            <param name="tc"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.BeginTeleport(System.UInt64,libsecondlife.LLVector3,libsecondlife.LLVector3,libsecondlife.TeleportCallback)">
            <summary>
            
            </summary>
            <param name="regionHandle"></param>
            <param name="position"></param>
            <param name="lookAt"></param>
            <param name="tc"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.Teleport(System.UInt64,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="regionHandle"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.MainAvatar.Teleport(System.UInt64,libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="regionHandle"></param>
            <param name="position"></param>
            <param name="lookAt"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.MainAvatar.Teleport(System.String,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="simName"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.MainAvatar.Teleport(System.String,libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="simName"></param>
            <param name="position"></param>
            <param name="lookAt"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.MainAvatar.TeleportLureRespond(libsecondlife.LLUUID,System.Boolean)">
            <summary>
            Respond to a teleport lure by either accepting it and initiating 
            the teleport, or denying it
            </summary>
            <param name="requesterID">UUID of the avatar requesting the teleport</param>
            <param name="accept">Accept the teleport request or deny it</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.Grab(System.UInt32)">
            <summary>
            Grabs an object
            </summary>
        </member>
        <member name="M:libsecondlife.MainAvatar.GrabUpdate(libsecondlife.LLUUID,libsecondlife.LLVector3)">
            <summary>
            Drags on an object
            </summary>
            <param name="objectID">Strangely, LLUID instead of local ID</param>
            <param name="grabPosition">Drag target in region coordinates</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.DeGrab(System.UInt32)">
            <summary>
            Releases a grabbed object
            </summary>
        </member>
        <member name="M:libsecondlife.MainAvatar.Touch(System.UInt32)">
            <summary>
            Touches an object
            </summary>
        </member>
        <member name="M:libsecondlife.MainAvatar.CompleteAgentMovement(libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.UpdateCamera(libsecondlife.Avatar.AgentUpdateFlags,libsecondlife.LLVector3,libsecondlife.LLVector3,libsecondlife.LLVector3,libsecondlife.LLVector3,libsecondlife.LLQuaternion,libsecondlife.LLQuaternion,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="reliable"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.CoarseLocationHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            [UNUSED - for now]
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.InstantMessageHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Take an incoming ImprovedInstantMessage packet, auto-parse, and if
              OnInstantMessage is defined call that with the appropriate arguments.
            </summary>
            <param name="packet">Incoming ImprovedInstantMessagePacket</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.ChatHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Take an incoming Chat packet, auto-parse, and if OnChat is defined call 
              that with the appropriate arguments.
            </summary>
            <param name="packet">Incoming ChatFromSimulatorPacket</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.MovementCompleteHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Update client's Position and LookAt from incoming packet
            </summary>
            <param name="packet">Incoming AgentMovementCompletePacket</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.HealthHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Update Client Avatar's health via incoming packet
            </summary>
            <param name="packet">Incoming HealthMessagePacket</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.BalanceHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Update Client Avatar's L$ balance from incoming packet
            </summary>
            <param name="packet">Incoming MoneyBalanceReplyPacket</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.MainAvatar.TeleportHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.MainAvatar.TeleportTimerEvent(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="ea"></param>
        </member>
        <member name="E:libsecondlife.MainAvatar.OnChat">
            <summary>Callback for incoming chat packets</summary>
        </member>
        <member name="E:libsecondlife.MainAvatar.OnInstantMessage">
            <summary>Callback for incoming IMs</summary>
        </member>
        <member name="E:libsecondlife.MainAvatar.OnTeleport">
            <summary>Callback for Teleport request update</summary>
        </member>
        <member name="E:libsecondlife.MainAvatar.OnBalanceUpdated">
            <summary>Callback for incoming change in L$ balance</summary>
        </member>
        <member name="T:libsecondlife.MainAvatar.ChatType">
            <summary>
            Conversion type to denote Chat Packet types in an easier-to-understand format
            </summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.Whisper">
            <summary>Whispers (5m radius)</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.Normal">
            <summary>Normal chat (10/20m radius) - Why is this here twice?</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.Shout">
            <summary>Shouting! (100m radius)</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.Say">
            <summary>Normal chat (10/20m radius) - Why is this here twice?</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.StartTyping">
            <summary>Event message when an Avatar has begun to type</summary>
        </member>
        <member name="F:libsecondlife.MainAvatar.ChatType.StopTyping">
            <summary>Event message when an Avatar has stopped typing</summary>
        </member>
        <member name="T:libsecondlife.AvatarManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.AvatarManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.AvatarManager.AddAvatar(libsecondlife.Avatar)">
            <summary>
            Add an Avatar into the Avatars Dictionary
            </summary>
            <param name="avatar">Filled-out Avatar class to insert</param>
        </member>
        <member name="M:libsecondlife.AvatarManager.Contains(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.AvatarManager.UpdateAvatar(libsecondlife.Avatar)">
            <summary>
            
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:libsecondlife.AvatarManager.LocalAvatarNameLookup(libsecondlife.LLUUID)">
            <summary>
            This function will only check if the avatar name exists locally,
            it will not do any networking calls to fetch the name
            </summary>
            <returns>The avatar name, or an empty string if it's not found</returns>
        </member>
        <member name="M:libsecondlife.AvatarManager.BeginGetAvatarName(libsecondlife.LLUUID,libsecondlife.AvatarManager.AgentNamesCallback)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:libsecondlife.AvatarManager.BeginGetAvatarNames(System.Collections.Generic.List{libsecondlife.LLUUID},libsecondlife.AvatarManager.AgentNamesCallback)">
            <summary>
            
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:libsecondlife.AvatarManager.GetAgentNameHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Process an incoming UUIDNameReply Packet and insert Full Names into the Avatars Dictionary
            </summary>
            <param name="packet">Incoming Packet to process</param>
            <param name="simulator">Unused</param>
        </member>
        <member name="E:libsecondlife.AvatarManager.OnFriendNotification">
            <summary>Triggered whenever a friend comes online or goes offline</summary>
        </member>
        <member name="T:libsecondlife.AvatarManager.FriendNotificationCallback">
            <summary>
            Triggered after friend request packet is sent out
            </summary>
            <param name="AgentID"></param>
            <param name="Online"></param>
        </member>
        <member name="T:libsecondlife.AvatarManager.AgentNamesCallback">
            <summary>
            Triggered when a UUIDNameReply is received
            </summary>
            <param name="names"></param>
        </member>
        <member name="T:libsecondlife.AvatarManager.AvatarPropertiesCallback">
            <summary>
            
            </summary>
            <param name="avatar"></param>
        </member>
        <member name="T:libsecondlife.AvatarManager.AvatarNameCallback">
            <summary>
            
            </summary>
            <param name="avatar"></param>
        </member>
        <member name="T:libsecondlife.AvatarManager.AvatarStatisticsCallback">
            <summary>
            
            </summary>
            <param name="avatar"></param>
        </member>
        <member name="T:libsecondlife.AvatarManager.AvatarInterestsCallback">
            <summary>
            
            </summary>
            <param name="avatar"></param>
        </member>
        <member name="T:libsecondlife.EstateTools">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.EstateTools.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.EstateTools.KickUser(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="prey"></param>
        </member>
        <member name="M:libsecondlife.EstateTools.BanUser(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="prey"></param>
        </member>
        <member name="M:libsecondlife.EstateTools.UnBanUser(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="prey"></param>
        </member>
        <member name="M:libsecondlife.EstateTools.TeleportHomeUser(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="prey"></param>
        </member>
        <member name="T:libsecondlife.GridRegionCallback">
            <summary>
            
            </summary>
            <param name="region"></param>
        </member>
        <member name="T:libsecondlife.GridRegion">
            <summary>
            Class for regions on the world map
            </summary>
        </member>
        <member name="F:libsecondlife.GridRegion.X">
            <summary>Sim X position on World Map</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.Y">
            <summary>Sim Y position on World Map</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.Name">
            <summary>Sim Name (NOTE: In lowercase!)</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.Access">
            <summary></summary> 
        </member>
        <member name="F:libsecondlife.GridRegion.RegionFlags">
            <summary>Various flags for the region (presumably things like PG/Mature)</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.WaterHeight">
            <summary>Sim's defined Water Height</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.Agents">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GridRegion.MapImageID">
            <summary>UUID of the World Map image</summary>
        </member>
        <member name="F:libsecondlife.GridRegion.RegionHandle">
            <summary>Used for teleporting</summary>
        </member>
        <member name="M:libsecondlife.GridRegion.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:libsecondlife.GridManager">
            <summary>
            Manages grid-wide tasks such as the world map
            </summary>
        </member>
        <member name="F:libsecondlife.GridManager.Regions">
            <summary>A dictionary of all the regions, indexed by region ID</summary>
        </member>
        <member name="F:libsecondlife.GridManager.SunDirection">
            <summary>Current direction of the sun</summary>
        </member>
        <member name="M:libsecondlife.GridManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            Constructor
            </summary>
            <param name="client">Instance of type SecondLife to associate with this GridManager instance</param>
        </member>
        <member name="M:libsecondlife.GridManager.AddSim(System.String)">
            <summary>
            If the client does not have data on this region already, request the region data for it
            </summary>
            <param name="name">Name of the region to add</param>
        </member>
        <member name="M:libsecondlife.GridManager.AddEstateSims">
            <summary>
            Fire off packet for Estate/Island sim data request.
            </summary>
        </member>
        <member name="M:libsecondlife.GridManager.AddLindenSims">
            <summary>
            Fire off packet for Linden/Mainland sim data request.
            </summary>
        </member>
        <member name="M:libsecondlife.GridManager.AddAllSims">
            <summary>
            Send Request Packets for lists of Linden ('mainland') and Estate (Island) sims.
            <remarks>
            LL's protocol for some reason uses a different request packet for Estate sims.
            </remarks>
            </summary>
        </member>
        <member name="M:libsecondlife.GridManager.BeginGetGridRegion(System.String,libsecondlife.GridRegionCallback)">
            <summary>
            
            </summary>
            <param name="name">Region Name you're requesting data for</param>
            <param name="grc">CallBack being used to process the response</param>
        </member>
        <member name="M:libsecondlife.GridManager.GetGridRegion(System.String)">
            <summary>
            Get grid region information using the region name
            </summary>
            <example>
            regiondata = GetGridRegion("Ahern");
            </example>
            <param name="name">Name of sim you're looking for</param>
            <returns>GridRegion for the sim you're looking for, or null if it's not available</returns>
        </member>
        <member name="M:libsecondlife.GridManager.MapBlockReplyHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Populate Grid info based on data from MapBlockReplyPacket
            </summary>
            <param name="packet">Incoming MapBlockReplyPacket packet</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="M:libsecondlife.GridManager.TimeMessageHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Get sim time from the appropriate packet
            </summary>
            <param name="packet">Incoming SimulatorViewerTimeMessagePacket from SL</param>
            <param name="simulator">[UNUSED]</param>
        </member>
        <member name="E:libsecondlife.GridManager.OnRegionAdd">
            <summary>
            Triggered when a new region is discovered through GridManager
            </summary>
        </member>
        <member name="T:libsecondlife.GroupMember">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupMember.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupMember.Contribution">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupMember.OnlineStatus">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupMember.Powers">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupMember.Title">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupMember.IsOwner">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.GroupMember.#ctor(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:libsecondlife.GroupRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupRole.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupRole.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupRole.Title">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupRole.Description">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupRole.Powers">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.GroupRole.#ctor(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:libsecondlife.GroupTitle">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupTitle.Title">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupTitle.Selected">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Group">
            <summary>
            Represents a group in Second Life
            </summary>
        </member>
        <member name="F:libsecondlife.Group.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.InsigniaID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.FounderID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.OwnerRole">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.Charter">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.MemberTitle">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.OpenEnrollment">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.ShowInList">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.Powers">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.AcceptNotices">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.AllowPublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.MaturePublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.MembershipFee">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.Money">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.Contribution">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.GroupMembershipCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Group.GroupRolesCount">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.Group.#ctor(libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:libsecondlife.Group.ToString">
            <summary>
            Returns the name of the group
            </summary>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.GroupProfile">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.InsigniaID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.FounderID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.OwnerRole">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.Charter">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.MemberTitle">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.OpenEnrollment">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.ShowInList">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.Powers">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.AcceptNotices">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.AllowPublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.MaturePublish">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.MembershipFee">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.Money">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.Contribution">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.GroupMembershipCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupProfile.GroupRolesCount">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Vote">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.Vote.Candidate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Vote.VoteString">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Vote.NumVotes">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.GroupAccountSummary">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.IntervalDays">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.CurrentInterval">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.StartDate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.Balance">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.TotalCredits">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.TotalDebits">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.ObjectTaxCurrent">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.LightTaxCurrent">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.LandTaxCurrent">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.GroupTaxCurrent">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.ParcelDirFeeCurrent">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.ObjectTaxEstimate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.LightTaxEstimate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.LandTaxEstimate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.GroupTaxEstimate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.ParcelDirFeeEstimate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.NonExemptMembers">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.LastTaxDate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountSummary.TaxDate">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.GroupAccountDetails">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupAccountDetails.IntervalDays">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountDetails.CurrentInterval">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountDetails.StartDate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountDetails.HistoryItems">
            <summary>A list of description/amount pairs making up the account 
            history</summary>
        </member>
        <member name="T:libsecondlife.GroupAccountTransactions">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.GroupAccountTransactions.IntervalDays">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountTransactions.CurrentInterval">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountTransactions.StartDate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.GroupAccountTransactions.Transactions">
            <summary>List of all the transactions for this group</summary>
        </member>
        <member name="T:libsecondlife.Transaction">
            <summary>
            A single transaction made by a group
            </summary>
        </member>
        <member name="F:libsecondlife.Transaction.Time">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Transaction.User">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Transaction.Type">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Transaction.Item">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Transaction.Amount">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.GroupManager">
            <summary>
            Handles all network traffic related to reading and writing group
            information
            </summary>
        </member>
        <member name="F:libsecondlife.GroupManager.GroupMembersCaches">
            <summary>A list of all the lists of group members, indexed by the request ID</summary>
        </member>
        <member name="F:libsecondlife.GroupManager.GroupRolesCaches">
            <summary>A list of all the lists of group roles, indexed by the request ID</summary>
        </member>
        <member name="F:libsecondlife.GroupManager.GroupRolesMembersCaches">
            <summary>A list of all the role to member mappings</summary>
        </member>
        <member name="M:libsecondlife.GroupManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.GroupManager.BeginGetCurrentGroups(libsecondlife.GroupManager.CurrentGroupsCallback)">
            <summary>
            
            </summary>
            <param name="cgc"></param>
        </member>
        <member name="M:libsecondlife.GroupManager.BeginGetGroupProfile(libsecondlife.LLUUID,libsecondlife.GroupManager.GroupProfileCallback)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="gpc"></param>
        </member>
        <member name="M:libsecondlife.GroupManager.BeginGetGroupMembers(libsecondlife.LLUUID,libsecondlife.GroupManager.GroupMembersCallback)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="gmc"></param>
        </member>
        <member name="M:libsecondlife.GroupManager.BeginGetGroupRoles(libsecondlife.LLUUID,libsecondlife.GroupManager.GroupRolesCallback)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="grc"></param>
        </member>
        <member name="M:libsecondlife.GroupManager.BeginGetGroupTitles(libsecondlife.LLUUID,libsecondlife.GroupManager.GroupTitlesCallback)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="gtc"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.CurrentGroupsCallback">
            <summary>
            Callback for the list of groups the avatar is currently a member of
            </summary>
            <param name="groups"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupProfileCallback">
            <summary>
            Callback for the profile of a group
            </summary>
            <param name="group"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupMembersCallback">
            <summary>
            Callback for the member list of a group
            </summary>
            <param name="members"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupRolesCallback">
            <summary>
            Callback for the role list of a group
            </summary>
            <param name="roles"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupRolesMembersCallback">
            <summary>
            Callback for a pairing of roles to members
            </summary>
            <param name="rolesMembers"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupTitlesCallback">
            <summary>
            Callback for the title list of a group
            </summary>
            <param name="titles"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupAccountSummaryCallback">
            <summary>
            
            </summary>
            <param name="summary"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupAccountDetailsCallback">
            <summary>
            
            </summary>
            <param name="details"></param>
        </member>
        <member name="T:libsecondlife.GroupManager.GroupAccountTransactionsCallback">
            <summary>
            
            </summary>
            <param name="transactions"></param>
        </member>
        <member name="T:libsecondlife.Helpers">
            <summary>
            Static helper functions and global variables
            </summary>
        </member>
        <member name="F:libsecondlife.Helpers.MSG_APPENDED_ACKS">
            <summary>This header flag signals that ACKs are appended to the packet</summary>
        </member>
        <member name="F:libsecondlife.Helpers.MSG_RESENT">
            <summary>This header flag signals that this packet has been sent before</summary>
        </member>
        <member name="F:libsecondlife.Helpers.MSG_RELIABLE">
            <summary>This header flags signals that an ACK is expected for this packet</summary>
        </member>
        <member name="F:libsecondlife.Helpers.MSG_ZEROCODED">
            <summary>This header flag signals that the message is compressed using zerocoding</summary>
        </member>
        <member name="F:libsecondlife.Helpers.VERSION">
            <summary>The version of libsecondlife (not the SL protocol itself)</summary>
        </member>
        <member name="M:libsecondlife.Helpers.UIntsToLong(System.UInt32,System.UInt32)">
            <summary>
            Packs to 32-bit unsigned integers in to a 64-bit unsigned integer
            </summary>
            <param name="a">The left-hand (or X) value</param>
            <param name="b">The right-hand (or Y) value</param>
            <returns>A 64-bit integer containing the two 32-bit input values</returns>
        </member>
        <member name="M:libsecondlife.Helpers.LongToUInts(System.UInt64,System.UInt32@,System.UInt32@)">
            <summary>
            Unpacks two 32-bit unsigned integers from a 64-bit unsigned integer
            </summary>
            <param name="a">The 64-bit input integer</param>
            <param name="b">The left-hand (or X) output value</param>
            <param name="c">The right-hand (or Y) output value</param>
        </member>
        <member name="M:libsecondlife.Helpers.FieldToString(System.Byte[])">
            <summary>
            Convert a variable length field (byte array) to a string.
            </summary>
            <remarks>If the byte array has unprintable characters in it, a 
            hex dump will be put in the string instead</remarks>
            <param name="bytes">The byte array to convert to a string</param>
            <returns>A UTF8 string, minus the null terminator</returns>
        </member>
        <member name="M:libsecondlife.Helpers.FieldToString(System.Byte[],System.String)">
            <summary>
            Convert a variable length field (byte array) to a string, with a
            field name prepended to each line of the output.
            </summary>
            <remarks>If the byte array has unprintable characters in it, a 
            hex dump will be put in the string instead</remarks>
            <param name="bytes">The byte array to convert to a string</param>
            <param name="fieldName">A field name to prepend to each line of output</param>
            <returns>A UTF8 string, minus the null terminator</returns>
        </member>
        <member name="M:libsecondlife.Helpers.StringToField(System.String)">
            <summary>
            Convert a UTF8 string to a byte array
            </summary>
            <param name="str">The string to convert to a byte array</param>
            <returns>A null-terminated byte array</returns>
        </member>
        <member name="M:libsecondlife.Helpers.VecDist(libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            Calculates the distance between two vectors
            </summary>
        </member>
        <member name="M:libsecondlife.Helpers.VecMag(libsecondlife.LLVector3)">
            <summary>
            Calculate the magnitude of the supplied vector
            </summary>
        </member>
        <member name="M:libsecondlife.Helpers.VecNorm(libsecondlife.LLVector3)">
            <summary>
            Return the supplied vector in normalized form
            </summary>
        </member>
        <member name="M:libsecondlife.Helpers.RotBetween(libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            Calculate the rotation between two vectors
            </summary>
            <param name="a">Directional vector, such as 1,0,0 for the forward face</param>
            <param name="b">Target vector - normalize first with VecNorm</param>
        </member>
        <member name="M:libsecondlife.Helpers.ZeroDecode(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Decode a zerocoded byte array, used to decompress packets marked
            with the zerocoded flag
            </summary>
            <remarks>Any time a zero is encountered, the next byte is a count 
            of how many zeroes to expand. One zero is encoded with 0x00 0x01, 
            two zeroes is 0x00 0x02, three zeroes is 0x00 0x03, etc. The 
            first four bytes are copied directly to the output buffer.
            </remarks>
            <param name="src">The byte array to decode</param>
            <param name="srclen">The length of the byte array to decode</param>
            <param name="dest">The output byte array to decode to</param>
            <returns>The length of the output buffer</returns>
        </member>
        <member name="M:libsecondlife.Helpers.ZeroDecodeCommand(System.Byte[],System.Byte[])">
            <summary>
            Decode enough of a byte array to get the packet ID.  Data before and
            after the packet ID is undefined.
            </summary>
            <param name="src">The byte array to decode</param>
            <param name="dest">The output byte array to encode to</param>
        </member>
        <member name="M:libsecondlife.Helpers.ZeroEncode(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Encode a byte array with zerocoding. Used to compress packets marked
            with the zerocoded flag. Any zeroes in the array are compressed down
            to a single zero byte followed by a count of how many zeroes to expand
            out. A single zero becomes 0x00 0x01, two zeroes becomes 0x00 0x02,
            three zeroes becomes 0x00 0x03, etc. The first four bytes are copied
            directly to the output buffer.
            </summary>
            <param name="src">The byte array to encode</param>
            <param name="srclen">The length of the byte array to encode</param>
            <param name="dest">The output byte array to encode to</param>
            <returns>The length of the output buffer</returns>
        </member>
        <member name="M:libsecondlife.Helpers.InventoryCRC(System.Int32,System.Byte,System.SByte,System.SByte,libsecondlife.LLUUID,libsecondlife.LLUUID,System.Int32,libsecondlife.LLUUID,libsecondlife.LLUUID,libsecondlife.LLUUID,libsecondlife.LLUUID,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Calculates the CRC (cyclic redundancy check) needed to upload inventory.
            </summary>
            <param name="creationDate">Creation date</param>
            <param name="saleType">Sale type</param>
            <param name="invType">Inventory type</param>
            <param name="type">Type</param>
            <param name="assetID">Asset ID</param>
            <param name="groupID">Group ID</param>
            <param name="salePrice">Sale price</param>
            <param name="ownerID">Owner ID</param>
            <param name="creatorID">Creator ID</param>
            <param name="itemID">Item ID</param>
            <param name="folderID">Folder ID</param>
            <param name="everyoneMask">Everyone mask (permissions)</param>
            <param name="flags">Flags</param>
            <param name="nextOwnerMask">Next owner mask (permissions)</param>
            <param name="groupMask">Group mask (permissions)</param>
            <param name="ownerMask">Owner mask (permisions)</param>
            <returns>The calculated CRC</returns>
        </member>
        <member name="T:libsecondlife.Helpers.LogLevel">
            <summary>
            Passed to SecondLife.Log() to identify the severity of a log entry
            </summary>
        </member>
        <member name="F:libsecondlife.Helpers.LogLevel.Info">
            <summary>Non-noisy useful information, may be helpful in 
            debugging a problem</summary>
        </member>
        <member name="F:libsecondlife.Helpers.LogLevel.Warning">
            <summary>A non-critical error occurred. A warning will not 
            prevent the rest of libsecondlife from operating as usual, 
            although it may be indicative of an underlying issue</summary>
        </member>
        <member name="F:libsecondlife.Helpers.LogLevel.Error">
            <summary>A critical error has occurred. Generally this will 
            be followed by the network layer shutting down, although the 
            stability of libsecondlife after an error is uncertain</summary>
        </member>
        <member name="F:libsecondlife.Helpers.LogLevel.Debug">
            <summary>Used for internal testing, this logging level can 
            generate very noisy (long and/or repetitive) messages. Don't
            pass this to the Log() function, use DebugLog() instead.
            </summary>
        </member>
        <member name="T:libsecondlife.Helpers.PermissionWho">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionWho.Group">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionWho.Everyone">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionWho.NextOwner">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Helpers.PermissionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionType.Copy">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionType.Modify">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionType.Move">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Helpers.PermissionType.Transfer">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.NotConnectedException">
            <summary>
            This exception is thrown whenever a network operation is attempted 
            without a network connection.
            </summary>
        </member>
        <member name="T:libsecondlife.Simulator">
            <summary>
            Simulator is a wrapper for a network connection to a simulator and the
            Region class representing the block of land in the metaverse.
            </summary>
        </member>
        <member name="F:libsecondlife.Simulator.INBOX_SIZE">
            <summary>The maximum size of the sequence number inbox, used to 
            check for resent and/or duplicate packets</summary>
        </member>
        <member name="F:libsecondlife.Simulator.Region">
            <summary>The Region class that this Simulator wraps</summary>
        </member>
        <member name="F:libsecondlife.Simulator.DisconnectCandidate">
            <summary>
            Used internally to track sim disconnections, do not modify this 
            variable.
            </summary>
        </member>
        <member name="M:libsecondlife.Simulator.#ctor(libsecondlife.SecondLife,System.Collections.Generic.Dictionary{libsecondlife.Packets.PacketType,System.Collections.Generic.List{libsecondlife.NetworkManager.PacketCallback}},System.UInt32,System.Net.IPAddress,System.Int32)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="callbacks"></param>
            <param name="circuit"></param>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:libsecondlife.Simulator.Disconnect">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Simulator.SendPacket(libsecondlife.Packets.Packet,System.Boolean)">
            <summary>
            
            </summary>
            <param name="packet"></param>
            <param name="incrementSequence"></param>
        </member>
        <member name="M:libsecondlife.Simulator.SendPacket(System.Byte[])">
            <summary>
            
            </summary>
            <param name="payload"></param>
        </member>
        <member name="P:libsecondlife.Simulator.CircuitCode">
            <summary>
            The ID number associated with this particular connection to the 
            simulator, used to emulate TCP connections. This is used 
            internally for packets that have a CircuitCode field.
            </summary>
        </member>
        <member name="P:libsecondlife.Simulator.IPEndPoint">
            <summary>
            The IP address and port of the server.
            </summary>
        </member>
        <member name="P:libsecondlife.Simulator.Connected">
            <summary>
            A boolean representing whether there is a working connection to the
            simulator or not.
            </summary>
        </member>
        <member name="T:libsecondlife.NetworkManager">
            <summary>
            NetworkManager is responsible for managing the network layer of 
            libsecondlife. It tracks all the server connections, serializes 
            outgoing traffic and deserializes incoming traffic, and provides
            instances of delegates for network-related events.
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.AgentID">
            <summary>
            The permanent UUID for the logged in avatar
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.SessionID">
            <summary>
            A temporary UUID assigned to this session, used for secure 
            transactions
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.LoginError">
            <summary>
            A string holding a descriptive error on login failure, empty
            otherwise
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.CurrentSim">
            <summary>
            The simulator that the logged in avatar is currently occupying
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.LoginValues">
            <summary>
            The complete dictionary of all the login values returned by the 
            RPC login server, converted to native data types wherever possible
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.OnSimDisconnected">
            <summary>
            An event for the connection to a simulator other than the currently
            occupied one disconnecting
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.OnDisconnected">
            <summary>
            An event for being logged out either through client request, server
            forced, or network error
            </summary>
        </member>
        <member name="M:libsecondlife.NetworkManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.RegisterCallback(libsecondlife.Packets.PacketType,libsecondlife.NetworkManager.PacketCallback)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="callback"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.UnregisterCallback(libsecondlife.Packets.PacketType,libsecondlife.NetworkManager.PacketCallback)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="callback"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.SendPacket(libsecondlife.Packets.Packet)">
            <summary>
            
            </summary>
            <param name="packet"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.SendPacket(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.SendPacket(System.Byte[])">
            <summary>
            
            </summary>
            <param name="payload"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.StartLocation(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Use this if you want to login to a specific location
            </summary>
            <param name="sim"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns>string with a value that can be used in the start field in .DefaultLoginValues()</returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.DefaultLoginValues(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="password"></param>
            <param name="userAgent"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.DefaultLoginValues(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="password"></param>
            <param name="userAgent"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.DefaultLoginValues(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="password"></param>
            <param name="mac"></param>
            <param name="startLocation"></param>
            <param name="platform"></param>
            <param name="viewerDigest"></param>
            <param name="userAgent"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.DefaultLoginValues(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="password"></param>
            <param name="mac"></param>
            <param name="startLocation"></param>
            <param name="major"></param>
            <param name="minor"></param>
            <param name="patch"></param>
            <param name="build"></param>
            <param name="platform"></param>
            <param name="viewerDigest"></param>
            <param name="userAgent"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.Login(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="password"></param>
            <param name="userAgent"></param>
            <param name="author"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.Login(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="loginParams"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.Login(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            
            </summary>
            <param name="loginParams"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.Connect(System.Net.IPAddress,System.UInt16,System.UInt32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="circuitCode"></param>
            <param name="setDefault"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.NetworkManager.Logout">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.NetworkManager.DisconnectSim(libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="sim"></param>
        </member>
        <member name="M:libsecondlife.NetworkManager.Shutdown">
            <summary>
            Shutdown will disconnect all the sims except for the current sim
            first, and then kill the connection to CurrentSim.
            </summary>
        </member>
        <member name="P:libsecondlife.NetworkManager.Connected">
            <summary>
            Shows whether the network layer is logged in to the grid or not
            </summary>
        </member>
        <member name="E:libsecondlife.NetworkManager.OnConnected">
            <summary>
            Event raised when the client was able to connected successfully.
            </summary>
            <remarks>Uses the ConnectedCallback delegate.</remarks>
        </member>
        <member name="T:libsecondlife.NetworkManager.PacketCallback">
            <summary>
            Coupled with RegisterCallback(), this is triggered whenever a packet
            of a registered type is received
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="T:libsecondlife.NetworkManager.SimDisconnectCallback">
            <summary>
            Triggered when a simulator other than the simulator that is currently
            being occupied disconnects for whatever reason
            </summary>
            <param name="simulator">The simulator that disconnected, which will become a null
            reference after the callback is finished</param>
            <param name="reason">Enumeration explaining the reason for the disconnect</param>
        </member>
        <member name="T:libsecondlife.NetworkManager.DisconnectCallback">
            <summary>
            Triggered when we are logged out of the grid due to a simulator request,
            client request, network timeout, or any other cause
            </summary>
            <param name="reason">Enumeration explaining the reason for the disconnect</param>
            <param name="message">If we were logged out by the simulator, this 
            is a message explaining why</param>
        </member>
        <member name="T:libsecondlife.NetworkManager.DisconnectType">
            <summary>
            Explains why a simulator or the grid disconnected from us
            </summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.DisconnectType.ClientInitiated">
            <summary>The client requested the logout or simulator disconnect</summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.DisconnectType.ServerInitiated">
            <summary>The server notified us that it is disconnecting</summary>
        </member>
        <member name="F:libsecondlife.NetworkManager.DisconnectType.NetworkTimeout">
            <summary>Either a socket was closed or network traffic timed out</summary>
        </member>
        <member name="T:libsecondlife.NetworkManager.ConnectedCallback">
            <summary>
            Assigned by the OnConnected event. Raised when login was a success
            </summary>
            <param name="sender">Reference to the SecondLife class that called the event</param>
        </member>
        <member name="T:libsecondlife.AgentThrottle">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Resend">
            <summary>Maximum bytes per second for resending unacknowledged packets</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Land">
            <summary>Maximum bytes per second for LayerData terrain</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Wind">
            <summary>Maximum bytes per second for LayerData wind data</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Cloud">
            <summary>Maximum bytes per second for LayerData clouds</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Task">
            <summary>Unknown, includes object data</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Texture">
            <summary>Maximum bytes per second for textures</summary>
        </member>
        <member name="F:libsecondlife.AgentThrottle.Asset">
            <summary>Maximum bytes per second for downloaded assets</summary>
        </member>
        <member name="M:libsecondlife.AgentThrottle.#ctor(libsecondlife.SecondLife)">
            <summary>
            Default constructor, uses a default high total of 1500 KBps (1536000)
            </summary>
        </member>
        <member name="M:libsecondlife.AgentThrottle.#ctor(libsecondlife.SecondLife,System.Single)">
            <summary>
            Sets the total KBps throttle
            <param name="total">The total kilobytes per second for the connection.
            This will be divided up between the various stream types using the 
            default multipliers</param>
            </summary>
        </member>
        <member name="M:libsecondlife.AgentThrottle.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.AgentThrottle.Set">
            <summary>
            Send an AgentThrottle packet to the server using the current values
            </summary>
        </member>
        <member name="M:libsecondlife.AgentThrottle.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:libsecondlife.AgentThrottle.Total">
            <summary>Maximum bytes per second the entire connection, divided up
            between invidiual streams using default multipliers</summary>
        </member>
        <member name="T:libsecondlife.PrimUpdate">
            <summary>
            Contains all of the variables sent in an object update packet for a 
            prim object. Used to track position and movement of prims.
            </summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.LocalID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.State">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.Position">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.Velocity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.Acceleration">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.Rotation">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.RotationVelocity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimUpdate.Textures">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.AvatarUpdate">
            <summary>
            Contains all of the variables sent in an object update packet for an 
            avatar. Used to track position and movement of avatars.
            </summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.LocalID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.State">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.CollisionPlane">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.Position">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.Velocity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.Acceleration">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.Rotation">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.RotationVelocity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.AvatarUpdate.Textures">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ObjectManager">
            <summary>
            Handles all network traffic related to prims and avatar positions and 
            movement.
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.RequestAllObjects">
            <summary>
            If true, when a cached object check is received from the server 
            the full object info will automatically be requested.
            </summary>
        </member>
        <member name="M:libsecondlife.ObjectManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            Instantiates a new ObjectManager class. This class should only be accessed
            through SecondLife.Objects, client applications should never create their own
            </summary>
            <param name="client">A reference to the client</param>
        </member>
        <member name="M:libsecondlife.ObjectManager.RequestObject(libsecondlife.Simulator,System.UInt32)">
            <summary>
            Request object information from the sim, primarily used for stale 
            or missing cache entries
            </summary>
            <param name="simulator">The simulator containing the object you're 
            looking for</param>
            <param name="localID">The local ID of the object</param>
        </member>
        <member name="M:libsecondlife.ObjectManager.RequestObjects(libsecondlife.Simulator,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Request object information for multiple objects all contained in
            the same sim, primarily used for stale or missing cache entries
            </summary>
            <param name="simulator">The simulator containing the object you're 
            looking for</param>
            <param name="localIDs">A list of local IDs of the objects</param>
        </member>
        <member name="M:libsecondlife.ObjectManager.AddPrim(libsecondlife.Simulator,libsecondlife.PrimObject,libsecondlife.LLVector3)">
            <summary>
            Create, or "rez" a new prim object in a simulator
            </summary>
            <param name="simulator">The target simulator</param>
            <param name="prim">The prim object to rez</param>
            <param name="nearPosition">An approximation of the position to rez
            the prim at</param>
            <remarks>Due to the way client prim rezzing is done on the server,
            the requested position for an object is only close to where the prim
            actually ends up. If you desire exact placement you'll need to 
            follow up by moving the object after it has been created.</remarks>
        </member>
        <member name="M:libsecondlife.ObjectManager.AddTree(libsecondlife.Simulator,libsecondlife.LLVector3,libsecondlife.LLQuaternion,libsecondlife.LLVector3,libsecondlife.ObjectManager.Tree,libsecondlife.LLUUID,System.Boolean)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="scale"></param>
            <param name="rotation"></param>
            <param name="position"></param>
            <param name="treeType"></param>
            <param name="groupOwner"></param>
            <param name="newTree"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.AddGrass(libsecondlife.Simulator,libsecondlife.LLVector3,libsecondlife.LLQuaternion,libsecondlife.LLVector3,libsecondlife.ObjectManager.Grass,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="scale"></param>
            <param name="rotation"></param>
            <param name="position"></param>
            <param name="grassType"></param>
            <param name="groupOwner"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.LinkPrims(libsecondlife.Simulator,System.Collections.Generic.List{System.UInt32})">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localIDs"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.SetRotation(libsecondlife.Simulator,System.UInt32,libsecondlife.LLQuaternion)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localID"></param>
            <param name="rotation"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.AttachObject(libsecondlife.Simulator,System.UInt32,libsecondlife.ObjectManager.AttachmentPoint,libsecondlife.LLQuaternion)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localID"></param>
            <param name="attachPoint"></param>
            <param name="rotation"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.DetachObjects(libsecondlife.Simulator,System.Collections.Generic.List{System.UInt32})">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localIDs"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.SetPosition(libsecondlife.Simulator,System.UInt32,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localID"></param>
            <param name="position"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.SetPermissions(libsecondlife.Simulator,System.Collections.Generic.List{System.UInt32},libsecondlife.Helpers.PermissionWho,libsecondlife.Helpers.PermissionType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="localIDs"></param>
            <param name="who"></param>
            <param name="permissions"></param>
            <param name="set"></param>
        </member>
        <member name="M:libsecondlife.ObjectManager.Dequantize(System.Byte[],System.Int32,System.Single,System.Single)">
            <summary>
            Takes a quantized 16-bit value from a byte array and its range and returns 
            a float representation of the continuous value. For example, a value of 
            32767 and a range of -128.0 to 128.0 would return 0.0. The endian conversion 
            from the 16-bit little endian to the native platform will also be handled.
            </summary>
            <param name="byteArray">The byte array containing the short value</param>
            <param name="pos">The beginning position of the short (quantized) value</param>
            <param name="lower">The lower quantization range</param>
            <param name="upper">The upper quantization range</param>
            <returns>A 32-bit floating point representation of the dequantized value</returns>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnNewPrim">
            <summary>
            This event will be raised for every ObjectUpdate block that 
            contains a prim that isn't attached to an avatar.
            </summary>
            <remarks>Depending on the circumstances a client could 
            receive two or more of these events for the same object, if you 
            or the object left the current sim and returned for example. Client
            applications are responsible for tracking and storing objects.
            </remarks>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnNewAttachment">
            <summary>
            This event will be raised for every ObjectUpdate block that 
            contains an avatar attachment.
            </summary>
            <remarks>Depending on the circumstances a client could 
            receive two or more of these events for the same object, if you 
            or the object left the current sim and returned for example. Client
            applications are responsible for tracking and storing objects.
            </remarks>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnNewAvatar">
            <summary>
            This event will be raised for every ObjectUpdate block that 
            contains a new avatar.
            </summary>
            <remarks>Depending on the circumstances a client 
            could receive two or more of these events for the same avatar, if 
            you or the other avatar left the current sim and returned for 
            example. Client applications are responsible for tracking and 
            storing objects.
            </remarks>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnNewFoliage">
            <summary>
            This event will be raised for every ObjectUpdate block that 
            contains a new tree or grass patch.
            </summary>
            <remarks>Depending on the circumstances a client could 
            receive two or more of these events for the same object, if you 
            or the object left the current sim and returned for example. Client
            applications are responsible for tracking and storing objects.
            </remarks>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnPrimMoved">
            <summary>
            This event will be raised when a prim movement packet is received, 
            containing the updated position, rotation, and movement-related 
            vectors.
            </summary>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnAvatarMoved">
            <summary>
            This event will be raised when an avatar movement packet is 
            received, containing the updated position, rotation, and 
            movement-related vectors.
            </summary>
        </member>
        <member name="E:libsecondlife.ObjectManager.OnObjectKilled">
            <summary>
            This event will be raised when an object is removed from a 
            simulator.
            </summary>
        </member>
        <member name="T:libsecondlife.ObjectManager.NewPrimCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="prim"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.NewAttachmentCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="prim"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.NewAvatarCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="avatar"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.NewFoliageCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="prim"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.PrimMovedCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="prim"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.AvatarMovedCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="avatar"></param>
            <param name="regionHandle"></param>
            <param name="timeDilation"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.KillObjectCallback">
            <summary>
            
            </summary>
            <param name="simulator"></param>
            <param name="objectID"></param>
        </member>
        <member name="T:libsecondlife.ObjectManager.PCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.Prim">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.Avatar">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.Grass">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.NewTree">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.ParticleSystem">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.PCode.Tree">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ObjectManager.AttachmentPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Chest">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Skull">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftShoulder">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightShoulder">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftHand">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightHand">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftFoot">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightFoot">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Spine">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Pelvis">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Mouth">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Chin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftEar">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightEar">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftEyeball">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightEyeball">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Nose">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightUpperArm">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightForarm">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftUpperArm">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftForearm">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightHip">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightUpperLeg">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightLowerLeg">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftHip">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftUpperLeg">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftLowerLeg">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.Stomach">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.LeftPec">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.AttachmentPoint.RightPec">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ObjectManager.CompressedFlags">
            <summary>
            Bitflag field for ObjectUpdateCompressed data blocks, describing 
            which options are present for each object
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.Unknown1">
            <summary>Hasn't been spotted in the wild yet</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.Tree">
            <summary>This may be incorrect</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.HasText">
            <summary>Whether the object has floating text ala llSetText</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.HasParticles">
            <summary>Whether the object has an active particle system</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.HasSound">
            <summary>Whether the object has sound attached to it</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.HasParent">
            <summary>Whether the object is attached to a root object or not</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.Unknown2">
            <summary>Semi-common flag, currently unknown</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.HasAngularVelocity">
            <summary>Whether the object has an angular velocity</summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.CompressedFlags.Attachment">
            <summary>Whether the object is an attachment or not</summary>
        </member>
        <member name="T:libsecondlife.ObjectManager.Tree">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Pine1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Oak">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.TropicalBush1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Palm1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Dogwood">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.TropicalBush2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Palm2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Cypress1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Cypress2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Pine2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Plumeria">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.WinterPine1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.WinterAspen">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.WinterPine2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Eucalyptus">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Fern">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Eelgrass">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.SeaSword">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Kelp1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.BeachGrass1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Tree.Kelp2">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ObjectManager.Grass">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.Grass0">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.Grass1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.Grass2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.Grass3">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.Grass4">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ObjectManager.Grass.undergrowth_1">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.DirectoryParcel">
            <summary>
            A parcel retrieved from the dataserver such as results from the 
            "For-Sale" listings
            </summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.OwnerID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.SnapshotID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.RegionHandle">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.SimName">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.Desc">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.SalePrice">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.ActualArea">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.GlobalPosition">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.SimPosition">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.DirectoryParcel.Dwell">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.DirectoryParcel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.Parcel">
            <summary>
            Parcel information retrieved from a simulator
            </summary>
        </member>
        <member name="F:libsecondlife.Parcel.RequestResult">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SequenceID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SnapSelection">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SelfCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.OtherCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.PublicCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.LocalID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.OwnerID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.IsGroupOwned">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.AuctionID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.ReservedNewbie">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.ClaimDate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.ClaimPrice">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.RentPrice">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.AABBMin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.AABBMax">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Bitmap">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Area">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Status">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SimWideMaxObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SimWideTotalObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.MaxObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.TotalObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.OwnerObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.GroupObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.OtherObjects">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.ParcelObjectBonus">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.OtherCleanTime">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.ParcelFlags">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SalePrice">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Desc">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.MusicURL">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.MediaURL">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.MediaID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.MediaAutoScale">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.GroupID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.PassPrice">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.PassHours">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Category">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.AuthBuyerID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.SnapshotID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.UserLocation">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.UserLookAt">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.LandingType">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Parcel.Dwell">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.Parcel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Parcel.#ctor(libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.Parcel.GetDwell(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.Parcel.Buy(libsecondlife.SecondLife,System.Boolean,libsecondlife.LLUUID,System.Boolean)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="forGroup"></param>
            <param name="groupID"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.Parcel.Reclaim(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.Parcel.Deed(libsecondlife.SecondLife,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="groupID"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.Parcel.Update(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.Parcel.ReturnObjects(libsecondlife.SecondLife,System.UInt32)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="returnType"></param>
        </member>
        <member name="T:libsecondlife.ParcelManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.ParcelManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.ParcelManager.ParcelDwellReplyHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.ParcelManager.RequestParcelInfo(libsecondlife.DirectoryParcel)">
            <summary>
            
            </summary>
            <param name="parcel"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.ParcelManager.DirLandRequest(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="reservedNewbie"></param>
            <param name="forSale"></param>
            <param name="auction"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.ParticleSystem">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartStartRGBA">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartEndRGBA">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartStartScale">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartEndScale">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartMaxAge">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcMaxAge">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcAccel">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcAngleBegin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcAngleEnd">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcBurstPartCount">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcBurstRadius">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcBurstRate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcBurstSpeedMin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcBurstSpeedMax">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcOmega">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcTargetKey">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcTexture">
            <summary>Texture that will be applied to the particles</summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SrcPattern">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.PartFlags">
            <summary>Various options that describe the behavior of this system</summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.Version">
            <summary>Unknown</summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.StartTick">
            <summary>Unknown</summary>
        </member>
        <member name="M:libsecondlife.ParticleSystem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.ParticleSystem.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.ParticleSystem.GetXml(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.ParticleSystem.FromBytes(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="T:libsecondlife.ParticleSystem.SourcePattern">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.None">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.Drop">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.Explode">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.Angle">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.AngleCone">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.SourcePattern.AngleConeEmpty">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ParticleSystem.ParticleFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.None">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.InterpColor">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.InterpScale">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.Bounce">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.Wind">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.FollowSrc">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.FollowVelocity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.TargetPos">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.TargetLinear">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ParticleSystem.ParticleFlags.Emissive">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.PrimObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathTwistBegin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathEnd">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ProfileBegin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathRadiusOffset">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathSkew">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Position">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ProfileCurve">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathScaleX">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathScaleY">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.LocalID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ParentID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.GroupID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Material">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Description">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathShearX">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathShearY">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathTaperX">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathTaperY">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ProfileEnd">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathBegin">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathCurve">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Scale">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathTwist">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ProfileHollow">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PathRevolutions">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Rotation">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.State">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Text">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.PCode">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Flags">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Textures">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.TextureAnim">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Flexible">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.Light">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimObject.ParticleSys">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.PrimObject.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.PrimObject.#ctor(libsecondlife.SecondLife,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="texture"></param>
        </member>
        <member name="M:libsecondlife.PrimObject.PathScaleByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathScale"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathScaleFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="pathScale"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathShearByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathShear"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathShearFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="pathShear"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.ProfileBeginByte(System.Single)">
            <summary>
            
            </summary>
            <param name="profileBegin"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.ProfileBeginFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="profileBegin"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.ProfileEndByte(System.Single)">
            <summary>
            
            </summary>
            <param name="profileEnd"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.ProfileEndFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="profileEnd"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathBeginByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathBegin"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathBeginFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="pathBegin"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathEndByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathEnd"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathEndFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="pathEnd"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathRadiusOffsetByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathRadiusOffset"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathRadiusOffsetFloat(System.SByte)">
            <summary>
            
            </summary>
            <param name="pathRadiusOffset"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathRevolutionsByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathRevolutions"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathRevolutionsFloat(System.Byte)">
            <summary>
            
            </summary>
            <param name="pathRevolutions"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathSkewByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathSkew"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathSkewFloat(System.SByte)">
            <summary>
            
            </summary>
            <param name="pathSkew"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathTaperByte(System.Single)">
            <summary>
            
            </summary>
            <param name="pathTaper"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.PathTaperFloat(System.SByte)">
            <summary>
            
            </summary>
            <param name="pathTaper"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.SetExtraParamsFromBytes(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.GetXml">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimObject.FromXml(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="primXml"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.ObjectFlags">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.ExtraParamType">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.PrimFlexibleData">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Softness">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Gravity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Drag">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Wind">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Tension">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimFlexibleData.Force">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.PrimFlexibleData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.PrimFlexibleData.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.PrimFlexibleData.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimFlexibleData.GetXml(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.PrimLightData">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.R">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.G">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.B">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.Intensity">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.Radius">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PrimLightData.Falloff">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.PrimLightData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.PrimLightData.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.PrimLightData.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.PrimLightData.GetXml(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.PacketFrequency">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.PacketFrequency.Low">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PacketFrequency.Medium">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.PacketFrequency.High">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.FieldType">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.FieldType.U8">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.U16">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.U32">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.U64">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.S8">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.S16">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.S32">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.F32">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.F64">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.LLUUID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.BOOL">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.LLVector3">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.LLVector3d">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.LLVector4">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.LLQuaternion">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.IPADDR">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.IPPORT">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.Variable">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.Fixed">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.Single">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.FieldType.Multiple">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.MapField">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.MapField.KeywordPosition">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapField.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapField.Type">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapField.Count">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.MapField.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.MapBlock">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.MapBlock.KeywordPosition">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapBlock.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapBlock.Count">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapBlock.Fields">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.MapBlock.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.MapPacket">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.MapPacket.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapPacket.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapPacket.Frequency">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapPacket.Trusted">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapPacket.Encoded">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.MapPacket.Blocks">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.ProtocolManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.ProtocolManager.TypeSizes">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ProtocolManager.KeywordPositions">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ProtocolManager.LowMaps">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ProtocolManager.MediumMaps">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.ProtocolManager.HighMaps">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.ProtocolManager.#ctor(System.String,libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="mapFile"></param>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.ProtocolManager.Command(System.String)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.ProtocolManager.Command(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.ProtocolManager.Command(System.UInt16,libsecondlife.PacketFrequency)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="frequency"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.ProtocolManager.PrintMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.ProtocolManager.PrintOneMap(libsecondlife.MapPacket[],System.String)">
            <summary>
            
            </summary>
            <param name="map"></param>
            <param name="frequency"></param>
        </member>
        <member name="M:libsecondlife.ProtocolManager.DecodeMapFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mapFile"></param>
            <param name="outputFile"></param>
        </member>
        <member name="M:libsecondlife.ProtocolManager.LoadMapFile(System.String)">
            <summary>
            
            </summary>
            <param name="mapFile"></param>
        </member>
        <member name="T:libsecondlife.ParcelCompleteCallback">
            <summary>
            
            </summary>
            <param name="region"></param>
        </member>
        <member name="T:libsecondlife.Region">
            <summary>
            Represents a region (also known as a sim) in Second Life.
            </summary>
        </member>
        <member name="F:libsecondlife.Region.ID">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.Handle">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.Name">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.ParcelOverlay">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.ParcelOverlaysReceived">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.ParcelMarked">
            <summary>64x64 Array of parcels which have been successfully downloaded 
            (and their LocalID's, 0 = Null)</summary>
        </member>
        <member name="F:libsecondlife.Region.ParcelDownloading">
            <summary>Flag to indicate whether we are downloading a sim's parcels</summary>
        </member>
        <member name="F:libsecondlife.Region.ParcelDwell">
            <summary>Flag to indicate whether to get Dwell values automatically (NOT USED YET). Call Parcel.GetDwell() instead</summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainHeightRange00">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainHeightRange01">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainHeightRange10">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainHeightRange11">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainStartHeight00">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainStartHeight01">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainStartHeight10">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainStartHeight11">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.WaterHeight">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.SimOwner">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainBase0">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainBase1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainBase2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainBase3">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainDetail0">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainDetail1">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainDetail2">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.TerrainDetail3">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.IsEstateManager">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region.Estate">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Region._GridRegionData">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.Region.#ctor(libsecondlife.SecondLife)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.Region.#ctor(libsecondlife.SecondLife,libsecondlife.LLUUID,System.UInt64,System.String,System.Single[],libsecondlife.LLUUID,libsecondlife.LLUUID[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="id"></param>
            <param name="handle"></param>
            <param name="name"></param>
            <param name="heightList"></param>
            <param name="simOwner"></param>
            <param name="terrainImages"></param>
            <param name="isEstateManager"></param>
        </member>
        <member name="M:libsecondlife.Region.ParcelSubdivide(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="west"></param>
            <param name="south"></param>
            <param name="east"></param>
            <param name="north"></param>
        </member>
        <member name="M:libsecondlife.Region.ParcelJoin(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="west"></param>
            <param name="south"></param>
            <param name="east"></param>
            <param name="north"></param>
        </member>
        <member name="M:libsecondlife.Region.FillParcels">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Region.ResetParcelDownload">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Region.FilledParcels">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Region.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:libsecondlife.Region.OnParcelCompletion">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.LogCallback">
            <summary>
            Callback used for client apps to receive log messages from
            libsecondlife
            </summary>
            <param name="message"></param>
            <param name="level"></param>
        </member>
        <member name="T:libsecondlife.SecondLife">
            <summary>
            Main class to expose Second Life functionality to clients. All of the
            classes needed for sending and receiving data are accessible through 
            this class.
            </summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Network">
            <summary>Networking Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Parcels">
            <summary>Parcel (subdivided simulator lots) Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Self">
            <summary>'Client's Avatar' Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Avatars">
            <summary>Other Avatars Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Grid">
            <summary>Grid (aka simulator group) Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Objects">
            <summary>Object Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Groups">
            <summary>Group Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Throttle">
            <summary>Throttling Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife._ImageManager">
            <summary>Image Subsystem</summary>
        </member>
        <member name="F:libsecondlife.SecondLife.Debug">
            <summary>Debug flag</summary>
        </member>
        <member name="M:libsecondlife.SecondLife.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:libsecondlife.SecondLife.ToString">
            <summary>
            
            </summary>
            <returns>Client Avatar's Full Name</returns>
        </member>
        <member name="M:libsecondlife.SecondLife.Tick">
            <summary>
            A simple sleep function that will allow pending threads to run
            </summary>
        </member>
        <member name="M:libsecondlife.SecondLife.Log(System.String,libsecondlife.Helpers.LogLevel)">
            <summary>
            Send a log message to the debugging output system
            </summary>
            <param name="message">The log message</param>
            <param name="level">From the LogLevel enum, either Info, Warning, or Error</param>
        </member>
        <member name="M:libsecondlife.SecondLife.DebugLog(System.String)">
            <summary>
            If the library is compiled with DEBUG defined, and SecondLife.Debug
            is true, either an event will be fired for the debug message or 
            it will be written to the console
            </summary>
            <param name="message">The debug message</param>
        </member>
        <member name="E:libsecondlife.SecondLife.OnLogMessage">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Bumpiness">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.Shininess">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.Mapping">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.TextureEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.TextureEntry.DefaultTexture">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureEntry.FaceTextures">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.TextureEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.TextureEntry.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.TextureEntry.SetFace(System.UInt32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.TextureEntry.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.TextureEntry.GetXml(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.TextureEntryFace">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.TextureEntryFace.#ctor(libsecondlife.TextureEntryFace)">
            <summary>
            
            </summary>
            <param name="defaultTexture"></param>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.TextureID">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.RGBA">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.RepeatU">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.RepeatV">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.OffsetU">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.OffsetV">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.Rotation">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.Flags1">
            <summary>
            
            </summary>
        </member>
        <member name="P:libsecondlife.TextureEntryFace.Flags2">
            <summary>
            
            </summary>
        </member>
        <member name="T:libsecondlife.TextureAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.Flags">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.Face">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.SizeX">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.SizeY">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.Start">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.Length">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.TextureAnimation.Rate">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.TextureAnimation.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:libsecondlife.TextureAnimation.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.TextureAnimation.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.TextureAnimation.GetXml(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.LLUUID">
            <summary>
            A 128-bit Universally Unique Identifier, used throughout the Second
            Life networking protocol
            </summary>
        </member>
        <member name="M:libsecondlife.LLUUID.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.LLUUID.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:libsecondlife.LLUUID.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="byteArray"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.LLUUID.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="randomize"></param>
        </member>
        <member name="M:libsecondlife.LLUUID.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.CRC">
            <summary>
            Calculate an LLCRC (cyclic redundancy check) for this LLUUID
            </summary>
            <returns>The CRC checksum for this LLUUID</returns>
        </member>
        <member name="M:libsecondlife.LLUUID.GenerateUUID">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.op_Equality(libsecondlife.LLUUID,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.op_Inequality(libsecondlife.LLUUID,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.op_ExclusiveOr(libsecondlife.LLUUID,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.op_Implicit(System.String)~libsecondlife.LLUUID">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLUUID.ToStringHyphenated">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:libsecondlife.LLUUID.Zero">
            <summary>
            An LLUUID with a value of all zeroes
            </summary>
        </member>
        <member name="P:libsecondlife.LLUUID.Data">
            <summary>Get a byte array of the 16 raw bytes making up the UUID</summary>
        </member>
        <member name="T:libsecondlife.LLVector3">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.LLVector3.X">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector3.Y">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector3.Z">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.LLVector3.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.LLVector3.#ctor(libsecondlife.LLVector3d)">
            <summary>
            
            </summary>
            <param name="vector"></param>
        </member>
        <member name="M:libsecondlife.LLVector3.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="byteArray"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.LLVector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:libsecondlife.LLVector3.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.GetXml(System.String)">
            <summary>
            Convert to a single xml node
            </summary>
            <param name="name">The desired name of the xml node</param>
            <returns>A line of xml data containing the values for this data type</returns>
        </member>
        <member name="M:libsecondlife.LLVector3.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.op_Equality(libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.op_Inequality(libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3.op_Subtraction(libsecondlife.LLVector3,libsecondlife.LLVector3)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="F:libsecondlife.LLVector3.Zero">
            <summary>
            An LLVector3 with a value of 0,0,0
            </summary>
        </member>
        <member name="T:libsecondlife.LLVector3d">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.LLVector3d.X">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector3d.Y">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector3d.Z">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.LLVector3d.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.LLVector3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:libsecondlife.LLVector3d.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="byteArray"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.LLVector3d.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector3d.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:libsecondlife.LLVector3d.Zero">
            <summary>
            An LLVector3d with a value of 0,0,0
            </summary>
        </member>
        <member name="T:libsecondlife.LLVector4">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.LLVector4.X">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector4.Y">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector4.Z">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLVector4.S">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.LLVector4.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.LLVector4.#ctor(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="byteArray"></param>
            <param name="pos"></param>
        </member>
        <member name="M:libsecondlife.LLVector4.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLVector4.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:libsecondlife.LLVector4.Zero">
            <summary>
            An LLVector4 with a value of 0,0,0,0
            </summary>
        </member>
        <member name="T:libsecondlife.LLQuaternion">
            <summary>
            
            </summary>
        </member>
        <member name="F:libsecondlife.LLQuaternion.X">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLQuaternion.Y">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLQuaternion.Z">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.LLQuaternion.W">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.LLQuaternion.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.LLQuaternion.#ctor(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Build a quaternion object from a byte array
            </summary>
            <param name="byteArray">The source byte array</param>
            <param name="pos">Offset in the byte array to start reading at</param>
            <param name="normalized">Whether the source data is normalized or
            not. If this is true 12 bytes will be read, otherwise 16 bytes will
            be read.</param>
        </member>
        <member name="M:libsecondlife.LLQuaternion.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Build a quaternion from normalized float values
            </summary>
            <param name="x">X value from -1.0 to 1.0</param>
            <param name="y">Y value from -1.0 to 1.0</param>
            <param name="z">Z value from -1.0 to 1.0</param>
        </member>
        <member name="M:libsecondlife.LLQuaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:libsecondlife.LLQuaternion.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.LLQuaternion.GetXml(System.String)">
            <summary>
            Convert to a single xml node
            </summary>
            <param name="name">The desired name of the xml node</param>
            <returns>A line of xml data containing the values for this data type</returns>
        </member>
        <member name="M:libsecondlife.LLQuaternion.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:libsecondlife.LLQuaternion.Identity">
            <summary>
            An LLQuaternion with a value of 0,0,0,1
            </summary>
        </member>
        <member name="T:libsecondlife.Packets.MalformedDataException">
            <summary>
            Thrown when a packet could not be successfully deserialized
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.MalformedDataException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.MalformedDataException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Message"></param>
        </member>
        <member name="T:libsecondlife.Packets.Header">
            <summary>
            The Second Life header of a message template packet. Either 5, 6, or 8 
            bytes in length at the beginning of the packet, and encapsulates any 
            appended ACKs at the end of the packet as well
            </summary>
        </member>
        <member name="F:libsecondlife.Packets.Header.Data">
            <summary>The raw header data, does not include appended ACKs</summary>
        </member>
        <member name="M:libsecondlife.Packets.Header.ToBytes(System.Byte[],System.Int32@)">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Packets.Header.AckList">
            <summary></summary>
        </member>
        <member name="M:libsecondlife.Packets.Header.AcksToBytes(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="i"></param>
        </member>
        <member name="M:libsecondlife.Packets.Header.BuildHeader(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="pos"></param>
            <param name="packetEnd"></param>
            <returns></returns>
        </member>
        <member name="M:libsecondlife.Packets.Header.CreateAckList(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="packetEnd"></param>
        </member>
        <member name="P:libsecondlife.Packets.Header.Flags">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.Reliable">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.Resent">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.Zerocoded">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.AppendedAcks">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.Sequence">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.ID">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.Header.Frequency">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Packets.LowHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.LowHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.LowHeader.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="pos"></param>
            <param name="packetEnd"></param>
        </member>
        <member name="M:libsecondlife.Packets.LowHeader.ToBytes(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="i"></param>
        </member>
        <member name="P:libsecondlife.Packets.LowHeader.ID">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.LowHeader.Frequency">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Packets.MediumHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.MediumHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.MediumHeader.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="pos"></param>
            <param name="packetEnd"></param>
        </member>
        <member name="M:libsecondlife.Packets.MediumHeader.ToBytes(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="i"></param>
        </member>
        <member name="P:libsecondlife.Packets.MediumHeader.ID">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.MediumHeader.Frequency">
            <summary></summary>
        </member>
        <member name="T:libsecondlife.Packets.HighHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.HighHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:libsecondlife.Packets.HighHeader.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="pos"></param>
            <param name="packetEnd"></param>
        </member>
        <member name="M:libsecondlife.Packets.HighHeader.ToBytes(System.Byte[],System.Int32@)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="i"></param>
        </member>
        <member name="P:libsecondlife.Packets.HighHeader.ID">
            <summary></summary>
        </member>
        <member name="P:libsecondlife.Packets.HighHeader.Frequency">
            <summary></summary>
        </member>
        <member name="F:libsecondlife.Packets.PacketType.Default">
            <summary>A generic value, not an actual packet type</summary>
        </member>
        <member name="T:libsecondlife.Packets.TestMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TestMessagePacket.TestBlock1Block">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TestMessagePacket.NeighborBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddCircuitCodePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddCircuitCodePacket.CircuitCodeBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UseCircuitCodePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UseCircuitCodePacket.CircuitCodeBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogControlPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogControlPacket.OptionsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RelayLogControlPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RelayLogControlPacket.OptionsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogMessagesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogMessagesPacket.OptionsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorAssignPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorAssignPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorAssignPacket.NeighborBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceServerSimulatorTimeMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceServerSimulatorTimeMessagePacket.TimeInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarTextureUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarTextureUpdatePacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarTextureUpdatePacket.TextureDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarTextureUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorMapUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorMapUpdatePacket.MapDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorSetMapPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorSetMapPacket.MapDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SubscribeLoadPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UnsubscribeLoadPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorStartPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorStartPacket.PositionSuggestionBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorStartPacket.ControlPortBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorReadyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorReadyPacket.TelehubBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorReadyPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TelehubInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TelehubInfoPacket.TelehubBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TelehubInfoPacket.SpawnPointBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPresentAtLocationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPresentAtLocationPacket.TelehubBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPresentAtLocationPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPresentAtLocationPacket.SimulatorPublicHostBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPresentAtLocationPacket.NeighborBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorLoadPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorLoadPacket.SimulatorLoadBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorLoadPacket.AgentListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorShutdownRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceRequestByRegionIDPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceRequestByRegionIDPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceRequestByHandlePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceRequestByHandlePacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionPresenceResponsePacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RecordAgentPresencePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RecordAgentPresencePacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RecordAgentPresencePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EraseAgentPresencePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EraseAgentPresencePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPresenceRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPresenceRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPresenceResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPresenceResponsePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateSimulatorPacket.SimulatorInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentSessionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentSessionPacket.SessionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentSessionPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClearAgentSessionsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClearAgentSessionsPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogDwellTimePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogDwellTimePacket.DwellInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FeatureDisabledPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FeatureDisabledPacket.FailureInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogFailedMoneyTransactionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogFailedMoneyTransactionPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportInternalPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportInternalPacket.MeanCollisionBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportInternalPacket.ReportDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSimStatusInDatabasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSimStatusInDatabasePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSimPresenceInDatabasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSimPresenceInDatabasePacket.SimDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EconomyDataRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EconomyDataPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EconomyDataPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestBackendPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerRequestBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPickerReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesQueryPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PlacesReplyPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirFindQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPlacesReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPeopleReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirEventsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirEventsReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirEventsReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirEventsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirGroupsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirClassifiedReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarClassifiedReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarClassifiedReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarClassifiedReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoUpdatePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedInfoUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedDeletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedGodDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedGodDeletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClassifiedGodDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPicksReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirLandReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryBackendPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularQueryBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularReplyPacket.QueryRepliesBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DirPopularReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelInfoReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelObjectOwnersRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelObjectOwnersRequestPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelObjectOwnersRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineStatusReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelObjectOwnersReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelObjectOwnersReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticesListReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeAddPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeAddPacket.MessageBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeAddPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeDeletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupNoticeDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLocationRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLocationRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLocationRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLocalPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLocalPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLandmarkRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLandmarkRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportProgressPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportProgressPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportProgressPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataAgentAccessRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataAgentAccessRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataAgentAccessReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataAgentAccessReplyPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataHomeLocationRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataHomeLocationRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataHomeLocationReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataHomeLocationReplyPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLocationTeleportRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLocationTeleportRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLocationTeleportReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLocationTeleportReplyPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportFinishPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportFinishPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartLurePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartLurePacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartLurePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLureRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLureRequestPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportCancelPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportCancelPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteLurePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteLurePacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportStartPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportStartPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportFailedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportFailedPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardDataPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardDataPacket.BoardDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardDataPacket.EntryBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaderBoardDataPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegisterNewAgentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegisterNewAgentPacket.HelloBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UndoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UndoPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UndoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RedoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RedoPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RedoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UndoLandPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UndoLandPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RedoLandPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RedoLandPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPausePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentPausePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentResumePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentResumePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatFromViewerPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatFromViewerPacket.ChatDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatFromViewerPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentThrottlePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentThrottlePacket.ThrottleBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentThrottlePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentFOVPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentFOVPacket.FOVBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentFOVPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentHeightWidthPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentHeightWidthPacket.HeightWidthBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentHeightWidthPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSetAppearancePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSetAppearancePacket.VisualParamBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSetAppearancePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSetAppearancePacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSetAppearancePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentQuitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentQuitPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentQuitCopyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentQuitCopyPacket.FuseBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentQuitCopyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImageNotInDatabasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImageNotInDatabasePacket.ImageIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RebakeAvatarTexturesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RebakeAvatarTexturesPacket.TextureDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetAlwaysRunPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetAlwaysRunPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeletePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicatePacket.SharedDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicateOnRayPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicateOnRayPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDuplicateOnRayPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectScalePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectScalePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectScalePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectRotationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectRotationPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectRotationPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectFlagUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectFlagUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectClickActionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectClickActionPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectClickActionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImagePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectMaterialPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectMaterialPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectMaterialPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectShapePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectShapePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectShapePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExtraParamsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExtraParamsPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExtraParamsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectOwnerPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectOwnerPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectOwnerPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectOwnerPacket.HeaderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGroupPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGroupPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGroupPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectBuyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectBuyPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectBuyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BuyObjectInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BuyObjectInventoryPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BuyObjectInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DerezContainerPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DerezContainerPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPermissionsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPermissionsPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPermissionsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPermissionsPacket.HeaderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSaleInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSaleInfoPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSaleInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectNamePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectNamePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectNamePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDescriptionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDescriptionPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDescriptionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectCategoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectCategoryPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectCategoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSelectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSelectPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSelectPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeselectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeselectPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeselectPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAttachPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAttachPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAttachPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDetachPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDetachPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDetachPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDropPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDropPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDropPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectLinkPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectLinkPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectLinkPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDelinkPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDelinkPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDelinkPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectHingePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectHingePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectHingePacket.JointTypeBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectHingePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDehingePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDehingePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDehingePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabUpdatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectGrabUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeGrabPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeGrabPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectDeGrabPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStartPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStartPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStartPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinUpdatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStopPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStopPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectSpinStopPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExportSelectedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExportSelectedPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectExportSelectedPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImportPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImportPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectImportPacket.AssetDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ModifyLandPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ModifyLandPacket.ModifyBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ModifyLandPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ModifyLandPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.VelocityInterpolateOnPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.VelocityInterpolateOnPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.VelocityInterpolateOffPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.VelocityInterpolateOffPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StateSavePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StateSavePacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StateSavePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReportAutosaveCrashPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReportAutosaveCrashPacket.AutosaveDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimWideDeletesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimWideDeletesPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimWideDeletesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentPacket.TargetDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TrackAgentPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantModificationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantModificationPacket.EmpoweredBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantModificationPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokeModificationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokeModificationPacket.RevokedBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokeModificationPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestGrantedProxiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestGrantedProxiesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantedProxiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantedProxiesPacket.EmpoweredBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantedProxiesPacket.GranterBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantedProxiesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddModifyAbilityPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddModifyAbilityPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddModifyAbilityPacket.GranterBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AddModifyAbilityPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveModifyAbilityPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveModifyAbilityPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveModifyAbilityPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket.DownloadTotalsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket.MiscStatsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket.NetStatsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket.FailStatsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStatsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptAnswerYesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptAnswerYesPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptAnswerYesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportPacket.MeanCollisionBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportPacket.ReportDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserReportPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AlertMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AlertMessagePacket.AlertDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAlertMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAlertMessagePacket.AlertDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAlertMessagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MeanCollisionAlertPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MeanCollisionAlertPacket.MeanCollisionBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerFrozenMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerFrozenMessagePacket.FrozenDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.HealthMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.HealthMessagePacket.HealthDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatFromSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatFromSimulatorPacket.ChatDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimStatsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimStatsPacket.StatBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimStatsPacket.RegionBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestRegionInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestRegionInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionInfoPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodUpdateRegionInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodUpdateRegionInfoPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodUpdateRegionInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionRequestPacket.RequestingRegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionReplyPacket.LandingRegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionUpdatedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NearestLandingRegionUpdatedPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLandingStatusChangedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TeleportLandingStatusChangedPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandshakePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandshakePacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandshakeReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandshakeReplyPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandshakeReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorViewerTimeMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorViewerTimeMessagePacket.TimeInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EnableSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EnableSimulatorPacket.SimulatorInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DisableSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferRequestPacket.TransferInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInfoPacket.TransferInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferAbortPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferAbortPacket.TransferInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferPriorityPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferPriorityPacket.TransferInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestXferPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestXferPacket.XferIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AbortXferPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AbortXferPacket.XferIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestAvatarInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestAvatarInfoPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAppearancePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAppearancePacket.VisualParamBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAppearancePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAppearancePacket.SenderBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetFollowCamPropertiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetFollowCamPropertiesPacket.CameraPropertyBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetFollowCamPropertiesPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClearFollowCamPropertiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClearFollowCamPropertiesPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestPayPricePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestPayPricePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PayPriceReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PayPriceReplyPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PayPriceReplyPacket.ButtonDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KickUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KickUserPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KickUserPacket.UserInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KickUserAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KickUserAckPacket.UserInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodKickUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodKickUserPacket.UserInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SystemKickUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SystemKickUserPacket.AgentInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectUserPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectUserPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FreezeUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FreezeUserPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FreezeUserPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesRequestBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesRequestBackendPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesReplyPacket.PropertiesDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsReplyPacket.PropertiesDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarGroupsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarGroupsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarGroupsReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesUpdatePacket.PropertiesDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPropertiesUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsUpdatePacket.PropertiesDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarInterestsUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarStatisticsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarStatisticsReplyPacket.StatisticsDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarStatisticsReplyPacket.AvatarDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarStatisticsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesUpdatePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarNotesUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPicksReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPicksReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarPicksReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoRequestPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoReplyPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventInfoReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationAddRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationAddRequestPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationAddRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationRemoveRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationRemoveRequestPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventNotificationRemoveRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventGodDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventGodDeletePacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventGodDeletePacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventGodDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoUpdatePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickInfoUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickDeletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickGodDeletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickGodDeletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PickGodDeletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptQuestionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptQuestionPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptControlChangePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptControlChangePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogPacket.ButtonsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDialogReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ForceScriptControlReleasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ForceScriptControlReleasePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokePermissionsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokePermissionsPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RevokePermissionsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LoadURLPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LoadURLPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptTeleportRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptTeleportRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelOverlayPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelOverlayPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestByIDPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestByIDPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestByIDPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesUpdatePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReturnObjectsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReturnObjectsPacket.TaskIDsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReturnObjectsPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReturnObjectsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReturnObjectsPacket.OwnerIDsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSetOtherCleanTimePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSetOtherCleanTimePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSetOtherCleanTimePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDisableObjectsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDisableObjectsPacket.TaskIDsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDisableObjectsPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDisableObjectsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDisableObjectsPacket.OwnerIDsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSelectObjectsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSelectObjectsPacket.ReturnIDsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSelectObjectsPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSelectObjectsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateCovenantRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateCovenantRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateCovenantReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateCovenantReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ForceObjectSelectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ForceObjectSelectPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ForceObjectSelectPacket.HeaderBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPassPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPassPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPassPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDeedToGroupPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDeedToGroupPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDeedToGroupPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReclaimPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReclaimPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReclaimPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelClaimPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelClaimPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelClaimPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelClaimPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelJoinPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelJoinPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelJoinPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDividePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDividePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDividePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReleasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReleasePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelReleasePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelBuyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodForceOwnerPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodForceOwnerPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodForceOwnerPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListReplyPacket.ListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListUpdatePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListUpdatePacket.ListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAccessListUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellRequestPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelDwellReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestParcelTransferPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestParcelTransferPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateParcelPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateParcelPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveParcelPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveParcelPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MergeParcelPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MergeParcelPacket.MasterParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MergeParcelPacket.SlaveParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogParcelChangesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogParcelChangesPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogParcelChangesPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogParcelChangesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CheckParcelSalesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CheckParcelSalesPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSalesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelSalesPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodMarkAsContentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodMarkAsContentPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodMarkAsContentPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodReserveForNewbiePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodReserveForNewbiePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelGodReserveForNewbiePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStartAuctionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStartAuctionPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerStartAuctionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartAuctionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartAuctionPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartAuctionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmAuctionStartPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmAuctionStartPacket.AuctionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteAuctionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteAuctionPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CancelAuctionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CancelAuctionPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CheckParcelAuctionsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CheckParcelAuctionsPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAuctionsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelAuctionsPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDNameRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDNameRequestPacket.UUIDNameBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDNameReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDNameReplyPacket.UUIDNameBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDGroupNameRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDGroupNameRequestPacket.UUIDNameBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDGroupNameReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UUIDGroupNameReplyPacket.UUIDNameBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatPassPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChatPassPacket.ChatDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentDyingPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentDyingPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUnknownPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUnknownPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KillChildAgentsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KillChildAgentsPacket.IDBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GetScriptRunningPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GetScriptRunningPacket.ScriptBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptRunningReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptRunningReplyPacket.ScriptBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetScriptRunningPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetScriptRunningPacket.ScriptBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetScriptRunningPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptResetPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptResetPacket.ScriptBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptResetPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptSensorRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptSensorRequestPacket.RequesterBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptSensorReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptSensorReplyPacket.SensedDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptSensorReplyPacket.RequesterBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteAgentMovementPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompleteAgentMovementPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentMovementCompletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentMovementCompletePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentMovementCompletePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogLoginPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogLoginPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogLoginPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConnectAgentToUserserverPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConnectAgentToUserserverPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConnectToUserserverPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataServerLogoutPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DataServerLogoutPacket.UserDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FinalizeLogoutPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FinalizeLogoutPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutReplyPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutDemandPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogoutDemandPacket.LogoutBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedInstantMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedInstantMessagePacket.MessageBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedInstantMessagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RetrieveInstantMessagesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RetrieveInstantMessagesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DequeueInstantMessagesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FindAgentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FindAgentPacket.LocationBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FindAgentPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestGodlikePowersPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestGodlikePowersPacket.RequestBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestGodlikePowersPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantGodlikePowersPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantGodlikePowersPacket.GrantDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GrantGodlikePowersPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodlikeMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodlikeMessagePacket.MethodDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodlikeMessagePacket.ParamListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodlikeMessagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateOwnerMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateOwnerMessagePacket.MethodDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateOwnerMessagePacket.ParamListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EstateOwnerMessagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GenericMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GenericMessagePacket.MethodDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GenericMessagePacket.ParamListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GenericMessagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MuteListRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MuteListRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MuteListRequestPacket.MuteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateMuteListEntryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateMuteListEntryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateMuteListEntryPacket.MuteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveMuteListEntryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveMuteListEntryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveMuteListEntryPacket.MuteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryFromNotecardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryFromNotecardPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryFromNotecardPacket.NotecardDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryFromNotecardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryItemPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateCreateInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateCreateInventoryItemPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateCreateInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryItemPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryItemPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CopyInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryItemPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChangeInventoryItemFlagsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChangeInventoryItemFlagsPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChangeInventoryItemFlagsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SaveAssetIntoInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SaveAssetIntoInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SaveAssetIntoInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryFolderPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryFolderPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryFolderPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryFolderPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryFolderPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateInventoryFolderPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryFolderPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryFolderPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveInventoryFolderPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryFolderPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryFolderPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryFolderPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryDescendentsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryDescendentsPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryDescendentsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryDescendentsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryDescendentsPacket.ItemDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryDescendentsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryDescendentsPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryReplyPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FetchInventoryReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkUpdateInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkUpdateInventoryPacket.ItemDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkUpdateInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkUpdateInventoryPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestInventoryAssetPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestInventoryAssetPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryAssetResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryAssetResponsePacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryObjectsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryObjectsPacket.ItemDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryObjectsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveInventoryObjectsPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PurgeInventoryDescendentsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PurgeInventoryDescendentsPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PurgeInventoryDescendentsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateTaskInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateTaskInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateTaskInventoryPacket.UpdateDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateTaskInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveTaskInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveTaskInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveTaskInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveTaskInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveTaskInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoveTaskInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestTaskInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestTaskInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestTaskInventoryPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReplyTaskInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReplyTaskInventoryPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeRezObjectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeRezObjectPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeRezObjectPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeRezObjectPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeRezAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectPacket.RezDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectFromNotecardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectFromNotecardPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectFromNotecardPacket.RezDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectFromNotecardPacket.NotecardDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezObjectFromNotecardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineInventoryPacket.InfoBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInventoryPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInventoryPacket.InfoBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInventoryPacket.InventoryBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInventoryAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferInventoryAckPacket.InfoBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestFriendshipPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestFriendshipPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestFriendshipPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptFriendshipPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptFriendshipPacket.TransactionBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptFriendshipPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptFriendshipPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineFriendshipPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineFriendshipPacket.TransactionBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineFriendshipPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FormFriendshipPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.FormFriendshipPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TerminateFriendshipPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TerminateFriendshipPacket.ExBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TerminateFriendshipPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OfferCallingCardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OfferCallingCardPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OfferCallingCardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptCallingCardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptCallingCardPacket.TransactionBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptCallingCardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AcceptCallingCardPacket.FolderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineCallingCardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineCallingCardPacket.TransactionBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeclineCallingCardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezScriptPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezScriptPacket.UpdateBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezScriptPacket.InventoryBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezScriptPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryItemPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryItemPacket.InventoryBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateInventoryItemPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateLandmarkForEventPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateLandmarkForEventPacket.InventoryBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateLandmarkForEventPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateLandmarkForEventPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationRequestPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationRequestPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationReplyPacket.EventDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EventLocationReplyPacket.QueryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandleRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionHandleRequestPacket.RequestBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionIDAndHandleReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RegionIDAndHandleReplyPacket.ReplyBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransferRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransferRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransferRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransferBackendPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransferBackendPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkMoneyTransferPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkMoneyTransferPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkMoneyTransferPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AdjustBalancePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AdjustBalancePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyBalanceRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyBalanceRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyBalanceRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyBalanceReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyBalanceReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RoutedMoneyBalanceReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RoutedMoneyBalanceReplyPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RoutedMoneyBalanceReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryReplyPacket.HistoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyHistoryReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneySummaryReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsReplyPacket.HistoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyDetailsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsReplyPacket.HistoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MoneyTransactionsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GestureRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GestureRequestPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ActivateGesturesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ActivateGesturesPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ActivateGesturesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeactivateGesturesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeactivateGesturesPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DeactivateGesturesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryUpdatePacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InventoryUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MuteListUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MuteListUpdatePacket.MuteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UseCachedMuteListPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UseCachedMuteListPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationReplyPacket.URLBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationReplyPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationReplyPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserSimLocationReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserSimLocationReplyPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserListReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserListReplyPacket.UserBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineNotificationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OnlineNotificationPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OfflineNotificationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OfflineNotificationPacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetStartLocationRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetStartLocationRequestPacket.StartLocationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetStartLocationRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetStartLocationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetStartLocationPacket.StartLocationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationRequestPacket.URLBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationRequestPacket.PositionBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserLoginLocationRequestPacket.UserBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLoginLocationReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLoginLocationReplyPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLoginLocationReplyPacket.UserBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SpaceLoginLocationReplyPacket.RegionInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NetTestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NetTestPacket.NetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetCPURatioPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetCPURatioPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimCrashedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimCrashedPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimCrashedPacket.UsersBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPauseStatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorPauseStatePacket.PauseBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorThrottleSettingsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorThrottleSettingsPacket.SenderBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimulatorThrottleSettingsPacket.ThrottleBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NameValuePairPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NameValuePairPacket.NameValueDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NameValuePairPacket.TaskDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveNameValuePairPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveNameValuePairPacket.NameValueDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveNameValuePairPacket.TaskDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GetNameValuePairPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GetNameValuePairPacket.NameValueNameBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GetNameValuePairPacket.TaskDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateAttachmentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateAttachmentPacket.InventoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateAttachmentPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateAttachmentPacket.OperationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateAttachmentPacket.AttachmentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveAttachmentPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveAttachmentPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RemoveAttachmentPacket.AttachmentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AssetUploadRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AssetUploadRequestPacket.AssetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AssetUploadCompletePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AssetUploadCompletePacket.AssetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationAgentAssignPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationAgentAssignPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationIndividualRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationIndividualRequestPacket.ReputationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationIndividualReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ReputationIndividualReplyPacket.ReputationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EmailMessageRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EmailMessageRequestPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EmailMessageReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EmailMessageReplyPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDataRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDataRequestPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDataReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptDataReplyPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupReplyPacket.ReplyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateGroupReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateGroupInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateGroupInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateGroupInfoPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleChangesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleChangesPacket.RoleChangeBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleChangesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.JoinGroupReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberRequestPacket.EjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberReplyPacket.EjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EjectGroupMemberReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LeaveGroupReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupRequestPacket.InviteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InviteGroupResponsePacket.InviteDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProfileReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountSummaryReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsReplyPacket.HistoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountDetailsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsRequestPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsReplyPacket.MoneyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsReplyPacket.HistoryDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupAccountTransactionsReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalsRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalsRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalsRequestPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalsRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalItemReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalItemReplyPacket.ProposalDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalItemReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupActiveProposalItemReplyPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryRequestPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryItemReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryItemReplyPacket.HistoryItemDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryItemReplyPacket.VoteItemBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryItemReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupVoteHistoryItemReplyPacket.TransactionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartGroupProposalPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartGroupProposalPacket.ProposalDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartGroupProposalPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProposalBallotPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProposalBallotPacket.ProposalDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupProposalBallotPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TallyVotesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersReplyPacket.MemberDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupMembersReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ActivateGroupPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ActivateGroupPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupContributionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupContributionPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupContributionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupAcceptNoticesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupAcceptNoticesPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetGroupAcceptNoticesPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataReplyPacket.RoleDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleDataReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersRequestPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersReplyPacket.MemberDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleMembersReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitlesRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitlesRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitlesReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitlesReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitlesReplyPacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitleUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupTitleUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleUpdatePacket.RoleDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupRoleUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LiveHelpGroupRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LiveHelpGroupRequestPacket.RequestDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LiveHelpGroupReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LiveHelpGroupReplyPacket.ReplyDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentWearablesRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentWearablesRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentWearablesUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentWearablesUpdatePacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentWearablesUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentIsNowWearingPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentIsNowWearingPacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentIsNowWearingPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTexturePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTexturePacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTexturePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTextureResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTextureResponsePacket.WearableDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentCachedTextureResponsePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDataUpdateRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDataUpdateRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDataUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDataUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupDataUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GroupDataUpdatePacket.AgentGroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentGroupDataUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentGroupDataUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentGroupDataUpdatePacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDropGroupPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentDropGroupPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogTextMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LogTextMessagePacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateTrustedCircuitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateTrustedCircuitPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DenyTrustedCircuitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DenyTrustedCircuitPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezSingleAttachmentFromInvPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezSingleAttachmentFromInvPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezSingleAttachmentFromInvPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezMultipleAttachmentsFromInvPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezMultipleAttachmentsFromInvPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezMultipleAttachmentsFromInvPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RezMultipleAttachmentsFromInvPacket.HeaderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DetachAttachmentIntoInvPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.DetachAttachmentIntoInvPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateNewOutfitAttachmentsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateNewOutfitAttachmentsPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateNewOutfitAttachmentsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CreateNewOutfitAttachmentsPacket.HeaderDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserInfoRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserInfoRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserInfoReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserInfoReplyPacket.UserDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UserInfoReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateUserInfoPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateUserInfoPacket.UserDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.UpdateUserInfoPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodExpungeUserPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodExpungeUserPacket.ExpungeDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GodExpungeUserPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartExpungeProcessPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartExpungeProcessPacket.ExpungeDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartExpungeProcessAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRenamePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRenamePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRenameAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkParcelRenamePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkParcelRenamePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelRenamePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelRenamePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRemovePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRemovePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartParcelRemoveAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkParcelRemovePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.BulkParcelRemovePacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateUploadPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateUploadPacket.FileDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateUploadPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateDownloadPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateDownloadPacket.FileDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InitiateDownloadPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SystemMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SystemMessagePacket.MethodDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SystemMessagePacket.ParamListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapLayerRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapLayerRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapLayerReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapLayerReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapLayerReplyPacket.LayerDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockRequestPacket.PositionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapNameRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapNameRequestPacket.NameDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapNameRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapBlockReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemRequestPacket.RequestDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemReplyPacket.RequestDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemReplyPacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MapItemReplyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SendPostcardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SendPostcardPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcChannelRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcChannelRequestPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcChannelReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcChannelReplyPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptRequestInboundPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptRequestInboundPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptRequestInboundPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptRequestInboundForwardPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptRequestInboundForwardPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptReplyInboundPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RpcScriptReplyInboundPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MailTaskSimRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MailTaskSimRequestPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MailTaskSimReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MailTaskSimReplyPacket.TargetBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MailTaskSimReplyPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptMailRegistrationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ScriptMailRegistrationPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelMediaCommandMessagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelMediaCommandMessagePacket.CommandBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelMediaUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelMediaUpdatePacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatRequestPacket.RequestDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatReplyPacket.RequestDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LandStatReplyPacket.ReportDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SecuredTemplateChecksumRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SecuredTemplateChecksumRequestPacket.TokenBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PacketAckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PacketAckPacket.PacketsBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OpenCircuitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.OpenCircuitPacket.CircuitInfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CloseCircuitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TemplateChecksumRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TemplateChecksumReplyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TemplateChecksumReplyPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TemplateChecksumReplyPacket.TokenBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClosestSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClosestSimulatorPacket.SimulatorBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ClosestSimulatorPacket.ViewerBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAddPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAddPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectAddPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MultipleObjectUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MultipleObjectUpdatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MultipleObjectUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestMultipleObjectsPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestMultipleObjectsPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestMultipleObjectsPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPositionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPositionPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPositionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestObjectPropertiesFamilyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestObjectPropertiesFamilyPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestObjectPropertiesFamilyPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CoarseLocationUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CoarseLocationUpdatePacket.LocationBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CoarseLocationUpdatePacket.IndexBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CrossedRegionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CrossedRegionPacket.InfoBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CrossedRegionPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CrossedRegionPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmEnableSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmEnableSimulatorPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPropertiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPropertiesPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPropertiesFamilyPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectPropertiesFamilyPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesRequestPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimStatusPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SimStatusPacket.SimStatusBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GestureUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.GestureUpdatePacket.AgentBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundGainChangePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundGainChangePacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundCutoffRadiusPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AttachedSoundCutoffRadiusPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PreloadSoundPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PreloadSoundPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InternalScriptMailPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.InternalScriptMailPacket.DataBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerEffectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ViewerEffectPacket.EffectBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSunPhasePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSunPhasePacket.DataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SetSunPhasePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartPingCheckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.StartPingCheckPacket.PingIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompletePingCheckPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CompletePingCheckPacket.PingIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NeighborListPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.NeighborListPacket.NeighborBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MovedIntoSimulatorPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.MovedIntoSimulatorPacket.SenderBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAnimationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAnimationPacket.AnimationListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentAnimationPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentRequestSitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentRequestSitPacket.TargetObjectBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentRequestSitPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSitPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentSitPacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestImagePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestImagePacket.RequestImageBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.RequestImagePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImageDataPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImageDataPacket.ImageIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImageDataPacket.ImageDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImagePacketPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImagePacketPacket.ImageIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImagePacketPacket.ImageDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LayerDataPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LayerDataPacket.LayerIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.LayerDataPacket.LayerDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdatePacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCompressedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCompressedPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCompressedPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCachedPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCachedPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ObjectUpdateCachedPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedTerseObjectUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedTerseObjectUpdatePacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ImprovedTerseObjectUpdatePacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KillObjectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.KillObjectPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentToNewRegionPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AgentToNewRegionPacket.RegionDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferPacketPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.TransferPacketPacket.TransferDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SendXferPacketPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SendXferPacketPacket.DataPacketBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SendXferPacketPacket.XferIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmXferPacketPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ConfirmXferPacketPacket.XferIDBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAnimationPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAnimationPacket.AnimationSourceListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAnimationPacket.SenderBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarAnimationPacket.AnimationListBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarSitResponsePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarSitResponsePacket.SitTransformBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AvatarSitResponsePacket.SitObjectBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CameraConstraintPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.CameraConstraintPacket.CameraCollidePlaneBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ParcelPropertiesPacket.ParcelDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EdgeDataPacketPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.EdgeDataPacketPacket.EdgeDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.VisualParamBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.GranterBlockBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.AnimationDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.GroupDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentUpdatePacket.NVPairDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentAlivePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentAlivePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentPositionUpdatePacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.ChildAgentPositionUpdatePacket.AgentDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PassObjectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PassObjectPacket.ObjectDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.PassObjectPacket.NVPairDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AtomicPassObjectPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.AtomicPassObjectPacket.TaskDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SoundTriggerPacket">
            <exclude/>
        </member>
        <member name="T:libsecondlife.Packets.SoundTriggerPacket.SoundDataBlock">
            <exclude/>
        </member>
        <member name="T:libsecondlife.AssetSystem.Asset">
            <summary>
            Summary description for Asset.
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.Asset.#ctor(libsecondlife.LLUUID,System.SByte,System.Boolean,System.Byte[])">
            <summary>
            </summary>
            <param name="assetID"></param>
            <param name="type"></param>
            <param name="tempfile"></param>
            <param name="assetData"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.Asset.#ctor(libsecondlife.LLUUID,System.SByte,System.Byte[])">
            <summary>
            </summary>
            <param name="assetID"></param>
            <param name="type"></param>
            <param name="assetData"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.Asset.AssetDataToString">
            <summary>
            Return this asset's data as a pretty printable string.
            </summary>
        </member>
        <member name="T:libsecondlife.AssetSystem.AssetImage">
            <summary>
            Summary description for AssetNotecard.
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetImage.#ctor(libsecondlife.LLUUID,System.Byte[])">
            <summary>
            </summary>
            <param name="assetID"></param>
            <param name="assetData"></param>
        </member>
        <member name="T:libsecondlife.AssetSystem.AssetManager">
            <summary>
            Summary description for AssetManager.
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetManager.SinkFee(System.Int32)">
            <summary>
            Handle the appropriate sink fee assoiacted with an asset upload
            </summary>
            <param name="sinkType"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetManager.UploadAsset(libsecondlife.AssetSystem.Asset)">
            <summary>
            Upload an asset to Second Life
            </summary>
            <param name="asset">The asset to be uploaded</param>
            <returns>The Asset ID of the completed upload</returns>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetManager.GetInventoryAsset(libsecondlife.InventorySystem.InventoryItem)">
            <summary>
            Get the Asset data for an item, must be used when requesting a Notecard
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetManager.GetInventoryAsset(libsecondlife.AssetSystem.Asset)">
            <summary>
            Get Asset data, works with BodyShapes (type 13) but does not work with Notecards(type 7)
            </summary>
            <param name="asset"></param>
        </member>
        <member name="T:libsecondlife.AssetSystem.AssetNotecard">
            <summary>
            Summary description for AssetNotecard.
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetNotecard.#ctor(libsecondlife.LLUUID,System.String)">
            <summary>
            </summary>
            <param name="assetID"></param>
            <param name="body"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetNotecard.#ctor(libsecondlife.LLUUID,System.Byte[])">
            <summary>
            </summary>
            <param name="assetID"></param>
            <param name="assetData"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetNotecard.setAsset(System.String)">
            <summary>
            </summary>
            <param name="body"></param>
        </member>
        <member name="T:libsecondlife.AssetSystem.AssetPacketHelpers">
            <summary>
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetPacketHelpers.AssetUploadRequest(libsecondlife.AssetSystem.Asset,libsecondlife.LLUUID)">
            <summary>
            Upload a small asset where the entire asset will fit in a single packet (less then 500 bytes)
            </summary>
            <param name="asset"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetPacketHelpers.AssetUploadRequestHeaderOnly(libsecondlife.AssetSystem.Asset,libsecondlife.LLUUID)">
            <summary>
            Send header to SL to let it know that a large asset upload is about to proceed.
            </summary>
            <param name="asset"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetPacketHelpers.SendXferPacket(System.UInt64,System.Byte[],System.UInt32)">
            <summary>
            Sends a packet of data to SL
            </summary>
            <param name="id"></param>
            <param name="data">First xferpacket data must include a prefixed S32 for the length of the asset.</param>
            <param name="packetNum"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.AssetPacketHelpers.TransferRequest(libsecondlife.LLUUID,libsecondlife.LLUUID,libsecondlife.LLUUID,libsecondlife.InventorySystem.InventoryItem)">
            <summary>
            Request the download of an asset
            The params field consists of a number of individual data components:
            Params: 1: OwnerID / *AgentID
            Params: 2: SessionID
            Params: 3: *OwnerID / AgentID
            Params: 4: Unknown (Maybe Group ID)
            Params: 5: ItemID
            Params: 6: AssetID
            Params: 7: Type
            Params: 8: Last Three Bytes Unknown
            </summary>
            <param name="SessionID"></param>
            <param name="AgentID"></param>
            <param name="TransferID"></param>
            <param name="item"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.BodyPart.ByteDataToBodyPart(System.Byte[])">
            <summary>
            Converts byte[] data from a data transfer into a bodypart class
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:libsecondlife.AssetSystem.ImageManager">
            <summary>
            Manages the uploading and downloading of Images from SecondLife
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.#ctor(libsecondlife.SecondLife)">
            <summary>
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.#ctor(libsecondlife.SecondLife,libsecondlife.AssetSystem.ImageManager.CacheTypes)">
            <summary>
            </summary>
            <param name="client"></param>
            <param name="ctype">The type of Cache system to use for images.</param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.#ctor(libsecondlife.SecondLife,libsecondlife.AssetSystem.ImageManager.CacheTypes,System.String)">
            <summary>
            </summary>
            <param name="client"></param>
            <param name="ctype">The type of Cache system to use for images.</param>
            <param name="directory">The directory to use for disk based caching.</param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.Init(libsecondlife.SecondLife,libsecondlife.AssetSystem.ImageManager.CacheTypes,System.String)">
            <summary>
            </summary>
            <param name="client"></param>
            <param name="ctype">The type of Cache system to use for images.</param>
            <param name="directory">The directory to use for disk based caching.</param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.RequestImage(libsecondlife.LLUUID)">
            <summary>
            Requests an image from SecondLife and blocks until it's received.
            </summary>
            <param name="ImageID">The Image's AssetID</param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.RequestImageAsync(libsecondlife.LLUUID)">
            <summary>
            Requests an image from SecondLife.
            </summary>
            <param name="ImageID">The Image's AssetID</param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.ImageDataCallbackHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Handles the Image Data packet, which includes the ID, and Size of the image, 
            along with the first block of data for the image.  If the image is small enough
            there will be no additional packets.
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.ImagePacketCallbackHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
            <summary>
            Handles the remaining Image data that did not fit in the initial ImageData packet
            </summary>
            <param name="packet"></param>
            <param name="simulator"></param>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImageManager.ImageNotInDatabaseCallbackHandler(libsecondlife.Packets.Packet,libsecondlife.Simulator)">
             <summary>
            
             </summary>
        </member>
        <member name="T:libsecondlife.AssetSystem.ImagePacketHelpers">
            <summary>
            Helper functions for packets relating to images.
            </summary>
        </member>
        <member name="M:libsecondlife.AssetSystem.ImagePacketHelpers.RequestImage(libsecondlife.LLUUID)">
            <summary>
            Send a packet requesting an image.  This will either fail silently, or result in 
            one ImageData packet, along with zero or more ImagePacket packets.
            </summary>
            <param name="imageID">LLUUID of the AssetID of an image.</param>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryBase">
            <summary>
            Base class for Inventory items
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryBase.#ctor(libsecondlife.InventorySystem.InventoryManager)">
            <summary>
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryBase.toXML(System.Boolean)">
            <summary>
            Output this item as XML
            </summary>
            <param name="outputAssets">Include an asset data as well, TRUE/FALSE</param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryBase.xmlSafe(System.String)">
            <summary>
            Utility function to simply making text XML safe
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryFolder">
            <summary>
            Summary description for InventoryFolder.
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryFolder.toXML(System.Boolean)">
            <summary>
            Output this folder as XML
            </summary>
            <param name="outputAssets">Include an asset data as well, TRUE/FALSE</param>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryImage">
            <summary>
            Summary description for InventoryNotecard.
            </summary>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryItem">
            <summary>
            Base class for most inventory items, providing a lot of general inventory management functions.
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.SetAssetTransactionIDs(libsecondlife.LLUUID,libsecondlife.LLUUID)">
            <summary></summary>
            
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.Equals(System.Object)">
            <summary>
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.GetHashCode">
            <summary>
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.CompareTo(System.Object)">
            <summary>
            CompareTo provided so that items can be sorted by name
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.MoveTo(libsecondlife.InventorySystem.InventoryFolder)">
            <summary>
            Move this item to the target folder
            </summary>
            <param name="targetFolder"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.MoveTo(libsecondlife.LLUUID)">
            <summary>
            Move this item to the target folder
            </summary>
            <param name="targetFolderID"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.CopyTo(libsecondlife.LLUUID)">
            <summary>
            If you have Copy permission, a copy is placed in the target folder
            </summary>
            <param name="targetFolder"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.GiveTo(libsecondlife.LLUUID)">
            <summary>
            Give this item to another agent.  If you have Copy permission, a copy will be given
            </summary>
            <param name="ToAgentID"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.Delete">
            <summary>
            Delete this item from Second Life
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.SetAssetData(System.Byte[])">
            <summary>
            </summary>
            <param name="assetData"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryItem.toXML(System.Boolean)">
            <summary>
            Output this item as XML
            </summary>
            <param name="outputAssets">Include an asset data as well, TRUE/FALSE</param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryImage.toXML(System.Boolean)">
            <summary>
            Output this image as XML
            </summary>
            <param name="outputAssets">Include an asset data as well, TRUE/FALSE</param>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryManager">
            <summary>
            Summary description for Inventory.
            </summary>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryNotecard">
            <summary>
            Summary description for InventoryNotecard.
            </summary>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryNotecard.#ctor(libsecondlife.InventorySystem.InventoryManager,System.String,System.String,libsecondlife.LLUUID,libsecondlife.LLUUID)">
            <summary>
            
            </summary>
            <param name="manager"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="folderID"></param>
            <param name="uuidOwnerCreater"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryNotecard.#ctor(libsecondlife.InventorySystem.InventoryManager,libsecondlife.InventorySystem.InventoryItem)">
            <summary>
            </summary>
            <param name="manager"></param>
            <param name="ii"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryNotecard.SetAssetData(System.Byte[])">
            <summary>
            </summary>
            <param name="assetData"></param>
        </member>
        <member name="M:libsecondlife.InventorySystem.InventoryNotecard.toXML(System.Boolean)">
            <summary>
            Output this item as XML
            </summary>
            <param name="outputAssets">Include an asset data as well, TRUE/FALSE</param>
        </member>
        <member name="T:libsecondlife.InventorySystem.InventoryPacketHelper">
            <summary>
            Summary description for Other.
            </summary>
        </member>
        <member name="T:Nii.JSON.JSONArray">
             <summary>
             <para>
             A JSONArray is an ordered sequence of values. Its external form is a string
             wrapped in square brackets with commas between the values. The internal form
             is an object having get() and opt() methods for accessing the values by
             index, and put() methods for adding or replacing values. The values can be
             any of these types: Boolean, JSONArray, JSONObject, Number, String, or the
             JSONObject.NULL object.
             </para>
             <para>
             The constructor can convert a JSON external form string into an
             internal form Java object. The toString() method creates an external
             form string.
             </para>
             <para>
             A get() method returns a value if one can be found, and throws an exception
             if one cannot be found. An opt() method returns a default value instead of
             throwing an exception, and so is useful for obtaining optional values.
             </para>
             <para>
             The generic get() and opt() methods return an object which you can cast or
             query for type. There are also typed get() and opt() methods that do typing
             checking and type coersion for you.
            </para>
             <para>
             The texts produced by the toString() methods are very strict.
             The constructors are more forgiving in the texts they will accept.
             </para>
             <para>
             <list type="bullet">
             <item><description>An extra comma may appear just before the closing bracket.</description></item>
             <item><description>Strings may be quoted with single quotes.</description></item>
             <item><description>Strings do not need to be quoted at all if they do not contain leading
                 or trailing spaces, and if they do not contain any of these characters:
                 { } [ ] / \ : , </description></item>
             <item><description>Numbers may have the 0- (octal) or 0x- (hex) prefix.</description></item>
             </list>
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
            </para>
             Ported to C# by Are Bjolseth, teleplan.no
             TODO:
             1. Implement Custom exceptions
             2. Add indexer JSONObject[i] = object,     and object = JSONObject[i];
             3. Add indexer JSONObject["key"] = object, and object = JSONObject["key"]
             4. Add unit testing
             5. Add log4net
             6. Make get/put methods private, to force use of indexer instead?
             </summary>
        </member>
        <member name="F:Nii.JSON.JSONArray.myArrayList">
            <summary>The ArrayList where the JSONArray's properties are kept.</summary>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor">
            <summary>
            Construct an empty JSONArray
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor(Nii.JSON.JSONTokener)">
            <summary>
            Construct a JSONArray from a JSONTokener.
            </summary>
            <param name="x">A JSONTokener</param>
        </member>
        <member name="M:Nii.JSON.JSONArray.opt(System.Int32)">
            <summary>
            Get the optional object value associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>object at that index.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.put(System.Int32,System.Object)">
            <summary>
            Put or replace a boolean value in the JSONArray.
            </summary>
            <param name="i">
            The subscript. If the index is greater than the length of
            the JSONArray, then null elements will be added as necessary to pad it out.
            </param>
            <param name="val">An object value.</param>
            <returns>this (JSONArray)</returns>
        </member>
        <member name="P:Nii.JSON.JSONArray.Item(System.Int32)">
            <summary>
            Alternate to Java get/put method, by using indexer
            </summary>
        </member>
        <member name="T:Nii.JSON.JsonFacade">
            <summary>
            Summary description for JsonFacade.
            </summary>
        </member>
        <member name="M:Nii.JSON.JsonFacade.fromJSON(System.String)">
            <summary>
            Parse JSON formatted string and return a dictionary
            </summary>
            <param name="sJSON"></param>
            <returns></returns>
        </member>
        <member name="T:Nii.JSON.JSONObject">
             <summary>
             <para>
             A JSONArray is an ordered sequence of values. Its external form is a string
             wrapped in square brackets with commas between the values. The internal form
             is an object having get() and opt() methods for accessing the values by
             index, and put() methods for adding or replacing values. The values can be
             any of these types: Boolean, JSONArray, JSONObject, Number, String, or the
             JSONObject.NULL object.
             </para>
             <para>
             The constructor can convert a JSON external form string into an
             internal form Java object. The toString() method creates an external
             form string.
             </para>
             <para>
             A get() method returns a value if one can be found, and throws an exception
             if one cannot be found. An opt() method returns a default value instead of
             throwing an exception, and so is useful for obtaining optional values.
             </para>
             <para>
             The generic get() and opt() methods return an object which you can cast or
             query for type. There are also typed get() and opt() methods that do typing
             checking and type coersion for you.
            </para>
             <para>
             The texts produced by the toString() methods are very strict.
             The constructors are more forgiving in the texts they will accept.
             </para>
             <para>
             <list type="bullet">
             <item><description>An extra comma may appear just before the closing bracket.</description></item>
             <item><description>Strings may be quoted with single quotes.</description></item>
             <item><description>Strings do not need to be quoted at all if they do not contain leading
                 or trailing spaces, and if they do not contain any of these characters:
                 { } [ ] / \ : , </description></item>
             <item><description>Numbers may have the 0- (octal) or 0x- (hex) prefix.</description></item>
             </list>
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
            </para>
             Ported to C# by Are Bjolseth, teleplan.no
             TODO:
             1. Implement Custom exceptions
             2. Add indexer JSONObject[i] = object,     and object = JSONObject[i];
             3. Add indexer JSONObject["key"] = object, and object = JSONObject["key"]
             4. Add unit testing
             5. Add log4net
             6. Make get/put methods private, to force use of indexer instead?
             </summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.myHashMap">
            <summary>The hash map where the JSONObject's properties are kept.</summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.myKeyIndexList">
            <summary>A shadow list of keys to enable access by sequence of insertion</summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.NULL">
            <summary>
            It is sometimes more convenient and less ambiguous to have a NULL
            object than to use C#'s null value.
            JSONObject.NULL.toString() returns "null".
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor">
            <summary>
             Construct an empty JSONObject.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor(Nii.JSON.JSONTokener)">
            <summary>
            Construct a JSONObject from a JSONTokener.
            </summary>
            <param name="x">A JSONTokener object containing the source string.</param>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor(System.String)">
            <summary>
            Construct a JSONObject from a string.
            </summary>
            <param name="sJSON">A string beginning with '{' and ending with '}'.</param>
        </member>
        <member name="M:Nii.JSON.JSONObject.getDictionary">
            <summary>
            C# convenience method
            </summary>
            <returns>The Dictionary</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.put(System.String,System.Object)">
            <summary>
            Put a key/value pair in the JSONObject. If the value is null,
            then the key will be removed from the JSONObject if it is present.
            </summary>
            <param name="key"> A key string.</param>
            <param name="val">
            An object which is the value. It should be of one of these
            types: Boolean, Double, Integer, JSONArray, JSONObject, String, or the
            JSONObject.NULL object.
            </param>
            <returns>JSONObject</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.remove(System.String)">
            <summary>
            Remove a object assosiateted with the given key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Nii.JSON.JSONObject.JSONNull">
            <summary>
            Make a Null object
            JSONObject.NULL is equivalent to the value that JavaScript calls null,
            whilst C#'s null is equivalent to the value that JavaScript calls undefined.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.JSONNull.ToString">
            <summary>
            Overriden to return "null"
            </summary>
            <returns>null</returns>
        </member>
        <member name="T:Nii.JSON.JSONTokener">
            <summary>
            <para>
             A JSONTokener takes a source string and extracts characters and tokens from
             it. It is used by the JSONObject and JSONArray constructors to parse
             JSON source strings.
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
             </para>
             <para>Ported to C# by Are Bjolseth, teleplan.no</para>
             <para>
             <list type="bullet">
             <item><description>Implement Custom exceptions</description></item>
             <item><description>Add unit testing</description></item>
             <item><description>Add log4net</description></item>
             </list>
             </para>
            </summary>
        </member>
        <member name="F:Nii.JSON.JSONTokener.myIndex">
            <summary>The index of the next character.</summary>
        </member>
        <member name="F:Nii.JSON.JSONTokener.mySource">
            <summary>The source string being tokenized.</summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.#ctor(System.String)">
            <summary>
            Construct a JSONTokener from a string.
            </summary>
            <param name="s">A source string.</param>
        </member>
        <member name="M:Nii.JSON.JSONTokener.back">
            <summary>
            Back up one character. This provides a sort of lookahead capability,
            so that you can test for a digit or letter before attempting to parse
            the next number or identifier.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.dehexchar(System.Char)">
            <summary>
            Get the hex value of a character (base16).
            </summary>
            <param name="c">
            A character between '0' and '9' or between 'A' and 'F' or
            between 'a' and 'f'.
            </param>
            <returns>An int between 0 and 15, or -1 if c was not a hex digit.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.more">
            <summary>
            Determine if the source string still contains characters that next() can consume.
            </summary>
            <returns>true if not yet at the end of the source.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.next">
            <summary>
            Get the next character in the source string.
            </summary>
            <returns>The next character, or 0 if past the end of the source string.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.next(System.Int32)">
            <summary>
            Get the next n characters.
            </summary>
            <param name="n">The number of characters to take.</param>
            <returns>A string of n characters.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextClean">
            <summary>
            Get the next char in the string, skipping whitespace
            and comments (slashslash and slashstar).
            </summary>
            <returns>A character, or 0 if there are no more characters.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextString(System.Char)">
            <summary>
            Return the characters up to the next close quote character.
            Backslash processing is done. The formal JSON format does not
            allow strings in single quotes, but an implementation is allowed to
            accept them.
            </summary>
            <param name="quote">The quoting character, either " or '</param>
            <returns>A String.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextObject">
            <summary>
            Get the next value as object. The value can be a Boolean, Double, Integer,
            JSONArray, JSONObject, or String, or the JSONObject.NULL object.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.unescape">
            <summary>
            Unescape the source text. Convert %hh sequences to single characters,
            and convert plus to space. There are Web transport systems that insist on
            doing unnecessary URL encoding. This provides a way to undo it.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.unescape(System.String)">
            <summary>
            Convert %hh sequences to single characters, and convert plus to space.
            </summary>
            <param name="s">A string that may contain plus and %hh sequences.</param>
            <returns>The unescaped string.</returns>
        </member>
        <member name="T:Nwc.XmlRpc.LogLevel">
            <summary>Define levels of logging.</summary><remarks> This duplicates
            similar enumerations in System.Diagnostics.EventLogEntryType. The 
            duplication was merited because .NET Compact Framework lacked the EventLogEntryType enum.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.LogLevel.Information">
            <summary>Information level, log entry for informational reasons only.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.LogLevel.Warning">
            <summary>Warning level, indicates a possible problem.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.LogLevel.Error">
            <summary>Error level, implies a significant problem.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.Logger">
            <summary>
            Logging singleton with swappable output delegate.
            </summary>
            <remarks>
            This singleton provides a centralized log. The actual WriteEntry calls are passed
            off to a delegate however. Having a delegate do the actual logginh allows you to
            implement different logging mechanism and have them take effect throughout the system.
            </remarks>
        </member>
        <member name="F:Nwc.XmlRpc.Logger.Delegate">
            <summary>The LoggerDelegate that will recieve WriteEntry requests.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.Logger.WriteEntry(System.String,Nwc.XmlRpc.LogLevel)">
            <summary>
            Method logging events are sent to.
            </summary>
            <param name="message">The message <c>String</c> to log.</param>
            <param name="level">The <c>LogLevel</c> of your message.</param>
        </member>
        <member name="T:Nwc.XmlRpc.Logger.LoggerDelegate">
            <summary>Delegate definition for logging.</summary>
            <param name="message">The message <c>String</c> to log.</param>
            <param name="level">The <c>LogLevel</c> of your message.</param>
        </member>
        <member name="T:Nwc.XmlRpc.Context">
            <summary>Parser context, we maintain contexts in a stack to avoiding recursion. </summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcDeserializer">
            <summary>Basic XML-RPC data deserializer.</summary>
            <remarks>Uses <c>XmlTextReader</c> to parse the XML data. This level of the class 
            only handles the tokens common to both Requests and Responses. This class is not useful in and of itself
            but is designed to be subclassed.</remarks>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcXmlTokens">
            <summary>Class collecting <c>String</c> tokens that are part of XML-RPC files.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.ISO_DATETIME">
            <summary>C# formatting string to describe an ISO 8601 date.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.BASE64">
            <summary>Base64 field indicator.</summary>
            <remarks>Corresponds to the &lt;base64&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.STRING">
            <summary>String field indicator.</summary>
            <remarks>Corresponds to the &lt;string&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.INT">
            <summary>Integer field integer.</summary>
            <remarks>Corresponds to the &lt;i4&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.ALT_INT">
            <summary>Alternate integer field indicator.</summary>
            <remarks>Corresponds to the &lt;int&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.DATETIME">
            <summary>Date field indicator.</summary>
            <remarks>Corresponds to the &lt;dateTime.iso8601&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.BOOLEAN">
            <summary>Boolean field indicator.</summary>
            <remarks>Corresponds to the &lt;boolean&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.VALUE">
            <summary>Value token.</summary>
            <remarks>Corresponds to the &lt;value&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.NAME">
            <summary>Name token.</summary>
            <remarks>Corresponds to the &lt;name&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.ARRAY">
            <summary>Array field indicator..</summary>
            <remarks>Corresponds to the &lt;array&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.DATA">
            <summary>Data token.</summary>
            <remarks>Corresponds to the &lt;data&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.MEMBER">
            <summary>Member token.</summary>
            <remarks>Corresponds to the &lt;member&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.STRUCT">
            <summary>Stuct field indicator.</summary>
            <remarks>Corresponds to the &lt;struct&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.DOUBLE">
            <summary>Double field indicator.</summary>
            <remarks>Corresponds to the &lt;double&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.PARAM">
            <summary>Param token.</summary>
            <remarks>Corresponds to the &lt;param&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.PARAMS">
            <summary>Params token.</summary>
            <remarks>Corresponds to the &lt;params&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.METHOD_CALL">
            <summary>MethodCall token.</summary>
            <remarks>Corresponds to the &lt;methodCall&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.METHOD_NAME">
            <summary>MethodName token.</summary>
            <remarks>Corresponds to the &lt;methodName&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.METHOD_RESPONSE">
            <summary>MethodResponse token</summary>
            <remarks>Corresponds to the &lt;methodResponse&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.FAULT">
            <summary>Fault response token.</summary>
            <remarks>Corresponds to the &lt;fault&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.FAULT_CODE">
            <summary>FaultCode token.</summary>
            <remarks>Corresponds to the &lt;faultCode&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcXmlTokens.FAULT_STRING">
            <summary>FaultString token.</summary>
            <remarks>Corresponds to the &lt;faultString&gt; tag.</remarks>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcDeserializer._text">
            <summary>Protected reference to last text.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcDeserializer._value">
            <summary>Protected reference to last deserialized value.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcDeserializer._name">
            <summary>Protected reference to last name field.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.#ctor">
            <summary>Basic constructor.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.Deserialize(System.IO.TextReader)">
            <summary>Static method that parses XML data into a response using the Singleton.</summary>
            <param name="xmlData"><c>StreamReader</c> containing an XML-RPC response.</param>
            <returns><c>Object</c> object resulting from the deserialization.</returns>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.DeserializeNode(System.Xml.XmlTextReader)">
            <summary>Protected method to parse a node in an XML-RPC XML stream.</summary>
            <remarks>Method deals with elements common to all XML-RPC data, subclasses of 
            this object deal with request/response spefic elements.</remarks>
            <param name="reader"><c>XmlTextReader</c> of the in progress parsing data stream.</param>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.Deserialize(System.String)">
            <summary>Static method that parses XML in a <c>String</c> into a 
            request using the Singleton.</summary>
            <param name="xmlData"><c>String</c> containing an XML-RPC request.</param>
            <returns><c>XmlRpcRequest</c> object resulting from the parse.</returns>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.PopContext">
            <summary>Pop a Context of the stack, an Array or Struct has closed.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.PushContext">
            <summary>Push a Context on the stack, an Array or Struct has opened.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcDeserializer.Reset">
            <summary>Reset the internal state of the deserializer.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcErrorCodes">
            <summary>Standard XML-RPC error codes.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcErrorCodes.TRANSPORT_ERROR">
            <summary></summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcErrorCodes.TRANSPORT_ERROR_MSG">
            <summary></summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcException">
            <summary>An XML-RPC Exception.</summary>
            <remarks>Maps a C# exception to an XML-RPC fault. Normal exceptions
            include a message so this adds the code needed by XML-RPC.</remarks>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcException.#ctor(System.Int32,System.String)">
            <summary>Instantiate an <c>XmlRpcException</c> with a code and message.</summary>
            <param name="code"><c>Int</c> faultCode associated with this exception.</param>
            <param name="message"><c>String</c> faultMessage associated with this exception.</param>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcException.ToString">
            <summary>Format the message to include the code.</summary>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcException.FaultString">
            <summary>The value of the faults message, i.e. the faultString.</summary>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcException.FaultCode">
            <summary>The value of the faults code, i.e. the faultCode.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcRequest">
            <summary>Class supporting the request side of an XML-RPC transaction.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcRequest._params">
            <summary><c>ArrayList</c> containing the parameters.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcRequest.#ctor">
            <summary>Instantiate an <c>XmlRpcRequest</c></summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcRequest.Send(System.String)">
            <summary>Send the request to the server.</summary>
            <param name="url"><c>String</c> The url of the XML-RPC server.</param>
            <returns><c>XmlRpcResponse</c> The response generated.</returns>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcRequest.ToString">
            <summary>Produce <c>String</c> representation of the object.</summary>
            <returns><c>String</c> representation of the object.</returns>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcRequest.Params">
            <summary><c>ArrayList</c> containing the parameters for the request.</summary>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcRequest.MethodName">
            <summary><c>String</c> conntaining the method name, both object and method, that the request will be sent to.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcRequestDeserializer">
            <summary>Class to deserialize XML data representing a request.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcRequestDeserializer.Deserialize(System.IO.TextReader)">
            <summary>Static method that parses XML data into a request using the Singleton.</summary>
            <param name="xmlData"><c>StreamReader</c> containing an XML-RPC request.</param>
            <returns><c>XmlRpcRequest</c> object resulting from the parse.</returns>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcRequestDeserializer.Singleton">
            <summary>A static singleton instance of this deserializer.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcRequestSerializer">
            <summary>Class responsible for serializing an XML-RPC request.</summary>
            <remarks>This class handles the request envelope, depending on <c>XmlRpcSerializer</c>
            to serialize the payload.</remarks>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcSerializer"/>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcSerializer">
            <summary>Base class of classes serializing data to XML-RPC's XML format.</summary>
            <remarks>This class handles the basic type conversions like Integer to &lt;i4&gt;. </remarks>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcXmlTokens"/>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcSerializer.Serialize(System.Xml.XmlTextWriter,System.Object)">
            <summary>Serialize the <c>XmlRpcRequest</c> to the output stream.</summary>
            <param name="output">An <c>XmlTextWriter</c> stream to write data to.</param>
            <param name="obj">An <c>Object</c> to serialize.</param>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcRequest"/>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcSerializer.Serialize(System.Object)">
            <summary>Serialize the <c>XmlRpcRequest</c> to a String.</summary>
            <remarks>Note this may represent a real memory hog for a large request.</remarks>
            <param name="obj">An <c>Object</c> to serialize.</param>
            <returns><c>String</c> containing XML-RPC representation of the request.</returns>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcRequest"/>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcSerializer.SerializeObject(System.Xml.XmlTextWriter,System.Object)">
            <remarks>Serialize the object to the output stream.</remarks>
            <param name="output">An <c>XmlTextWriter</c> stream to write data to.</param>
            <param name="obj">An <c>Object</c> to serialize.</param>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcRequestSerializer.Serialize(System.Xml.XmlTextWriter,System.Object)">
            <summary>Serialize the <c>XmlRpcRequest</c> to the output stream.</summary>
            <param name="output">An <c>XmlTextWriter</c> stream to write data to.</param>
            <param name="obj">An <c>XmlRpcRequest</c> to serialize.</param>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcRequest"/>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcResponse">
            <summary>Class designed to represent an XML-RPC response.</summary>
        </member>
        <member name="F:Nwc.XmlRpc.XmlRpcResponse.IsFault">
            <summary><c>bool</c> indicating if this response represents a fault.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcResponse.#ctor">
            <summary>Basic constructor</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcResponse.SetFault(System.Int32,System.String)">
            <summary>Set this response to be a fault.</summary>
            <param name="code"><c>int</c> the numeric faultCode value.</param>
            <param name="message"><c>String</c> the faultString value.</param>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcResponse.ToString">
            <summary>Form a useful string representation of the object, in this case the XML response.</summary>
            <returns><c>String</c> The XML serialized XML-RPC response.</returns>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcResponse.Value">
            <summary>The data value of the response, may be fault data.</summary>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcResponse.FaultCode">
            <summary>The faultCode if this is a fault.</summary>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcResponse.FaultString">
            <summary>The faultString if this is a fault.</summary>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcResponseDeserializer">
            <summary>Class to deserialize XML data representing a response.</summary>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcResponseDeserializer.Deserialize(System.IO.TextReader)">
            <summary>Static method that parses XML data into a response using the Singleton.</summary>
            <param name="xmlData"><c>StreamReader</c> containing an XML-RPC response.</param>
            <returns><c>XmlRpcResponse</c> object resulting from the parse.</returns>
        </member>
        <member name="T:Nwc.XmlRpc.XmlRpcResponseSerializer">
            <summary>Class responsible for serializing an XML-RPC response.</summary>
            <remarks>This class handles the response envelope, depending on XmlRpcSerializer
            to serialize the payload.</remarks>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcSerializer"/>
        </member>
        <member name="M:Nwc.XmlRpc.XmlRpcResponseSerializer.Serialize(System.Xml.XmlTextWriter,System.Object)">
            <summary>Serialize the <c>XmlRpcResponse</c> to the output stream.</summary>
            <param name="output">An <c>XmlTextWriter</c> stream to write data to.</param>
            <param name="obj">An <c>Object</c> to serialize.</param>
            <seealso cref="T:Nwc.XmlRpc.XmlRpcResponse"/>
        </member>
        <member name="P:Nwc.XmlRpc.XmlRpcResponseSerializer.Singleton">
            <summary>A static singleton instance of this deserializer.</summary>
        </member>
    </members>
</doc>
